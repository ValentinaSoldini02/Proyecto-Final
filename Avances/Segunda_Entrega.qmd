---
title: "Segunda entrega"
author: "Diego Da Rosa, Nahuel Bizoso, Valentina Soldini"
format: pdf
editor: visual
---

# INTRODUCCIÓN:

El mercado inmobiliario ha sido ha sido de gran importancia durante muchos años, tanto para inversores como para personas que buscan un alquiler una propiedad. La variabilidad de los precios puede depender de diferentes factores, como es la ubicación, caracteristicas de la propiedad, también la seguridad de la zona y algunos otros aspectos. Este estudio tiene como objetivo analizar como varían los precios de las propiedades teniendo en cuenta diferentes aspectos. Para realizar este análisis, plenteamos las diferentes preguntas de investigación:

-   ¿Cambia el precio con respecto al barrio en que se ecuestre la propiedad?
-   ¿En que municipio hay más alquileres?
-   ¿Cuál es la variable que más influye en el precio?
-   ¿Influye cuán peligroso es la zona para alquilar la propiedad y disminuye el precio? Mejorará el modelo?
-   ¿Hay alguna variable que debería de eliminarse al modelo?

Estas preguntas guiarán nuestro analisis para comprender mejor los factores que afectan los precios en el mercado inmobiliario y proporcionar una herramienta útil para los distintos agentes, ya sean compradores, vendedores, inversores y agentes inmobiliarios.

```{r}
# Instalar librerías:
# 
# install.packages("readr")
# install.packages("here")
# install.packages("cowplot")
# install.packages("gridExtra")

# NOTA) Usar disposicion


```

```{r, echo: false}

# Importar librerías

library(readr)
library(readxl)
library(here)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(tibble)
library(cowplot)
library(gridExtra)

```

# Datos

Los datos utilizados en este análisis se han extraidos de una pagina web llamada **kaggle**. Estos datos contienen variables que describen diversos aspectos de una propiedad disponibles para alquilar en el año 2023. La base de datos abarcan un total de 2361 registros de diferentes propiedades y 45 variables que incluyen desde el precio hasta diferentes caracteristicas internas y externas de la propiedad.

```{r, echo: false}




# Datos sobre precio de casas
datos <- read_csv(here("houses.csv"))
datos


```

Tabla con las diferentes variables, tipo de variable y una descripcion

```{r, echo: false}

# Creamos variables del tipo character
nombre_variable <- character()
tipo_variable <- character()
descripcion <- character()


# Creamos un dataframe donde vamos a almacenar la información de cada columna basandonos es: Nombre, Tipo de Dato, Descripción
tabla_variables <- data.frame(
  "Nombre de la variable" = nombre_variable,
  "Tipo de variable" = tipo_variable,
  "Descripción" = descripcion,
  stringsAsFactors = FALSE
)



# Creamos la tabla
tabla_variables[1,] <- c("direccion", "Numérica", "Ubicación donde se encuentra la propiedad")
tabla_variables[2,] <- c("nro_de_piso", "Character", "Número de piso de la propiedad")
tabla_variables[3,] <- c("tipo_prop", "Character", "Tipo de poropiedad, como apartamento, oficina, casa")
tabla_variables[4,] <- c("Condicion", "Character", "Condición en la que esta la vivienda, como Excelente, Buena, Renovada")
tabla_variables[5,] <- c("disposicion", "Character", "En que posición se encuentra la propiedad como, interior, frente, fondo")
tabla_variables[6,] <- c("m2_terraza", "Numérica", "Metros cuadrado de la terraza")
tabla_variables[7,] <- c("cant_cuartos", "Numérica", "Cantidad de dormitoros de la propiedad")
tabla_variables[8,] <- c("vivienda_social", "Numérica", "Si la propiedad esta destinada para vivienda social es 1 y sino 0")
tabla_variables[9,] <- c("Closet", "Numérica", "Espacio de guardaropas en la propiedad")
tabla_variables[10,] <- c("Garage", "Numérica", "Garage en la propiedad")
tabla_variables[11,] <- c("Playroom", "Numérica", "Sala de juegos en la propiedad")
tabla_variables[12,] <- c("WiFi", "Numérica", "Conección a wifi en la propiedad")
tabla_variables[13,] <- c("balcon", "Numérica", "Balcon en la propiedad")
tabla_variables[14,] <- c("jardin", "Numérica", "Jardin en la propiedad ")
tabla_variables[15,] <- c("amueblado", "Numérica", "La propiedad viene con los muebles incluidos a la hora de ser alquilado")
tabla_variables[16,] <- c("Updated", "Fecha", "Última fecha que fue actualizado el listado")
tabla_variables[17,] <- c("Apartments_per_Floor", "Numérica", "Número de apartamentos por piso en el edificio")
tabla_variables[18,] <- c("zona", "Character", "En que zona de Montevideo se encuentra la propiedad")
tabla_variables[19,] <- c("baños", "Numérica", "Cuántos cuartos hay en la propiedad")
tabla_variables[20,] <- c("m2_totales", "Numérica", "Metros cuadrados de la propiedad")
tabla_variables[21,] <- c("cant_de_est", "Numérica", "Cantidad de estacionamientos que tiene disponible la propiedad")
tabla_variables[22,] <- c("Barbecue", "Numérica", "Barbacoa en la propiedad")
tabla_variables[23,] <- c("Patio", "Numérica", "Patio en la propiedad")
tabla_variables[24,] <- c("Pet", "Numérica", "Si se aceptan perros o no")
tabla_variables[25,] <- c("Duplex", "Numérica", "Si es un duplex o no, duplex es una propiedad que esta encima de otra y generalmente son dos")
tabla_variables[26,] <- c("zona_barbacoa", "Numérica", "Si hay una zona de barbacoa en el edificio de la propiedad")
tabla_variables[27,] <- c("deposito", "Numérica", "Área de almacenaiento o depósito en la propiedad")
tabla_variables[28,] <- c("losa_radiante", "Numérica", "Losa radiante en la propiedad")
tabla_variables[29,] <- c("precio_m2", "Numérica", "El precio de la propiedad por metros cuadrados")
tabla_variables[30,] <- c("Common_Expenses", "Numérica", "Gastos comunes asociados a la propiedad")
tabla_variables[31,] <- c("cant_de_piso", "Numérica", "Núemero total de piso en el edificio")
tabla_variables[32,] <- c("Condition", "Character", "En que condición se encuentra el apartamento")
tabla_variables[33,] <- c("cant_habitaciones", "Numérica", "Cantidad de habitaciones en la propiedad")
tabla_variables[34,] <- c("año_de_const", "Numérica", "En que año fue construida la propiedad")
tabla_variables[35,] <- c("vista_al_mar", "Numérica", "Propiedad con vista al mar o no")
tabla_variables[36,] <- c("Living_Room", "Numérica", "Propiedad con living o no")
tabla_variables[37,] <- c("Pool", "Numérica", "Pool en la propiedad")
tabla_variables[38,] <- c("coneccion_cas", "Numérica", "Propiedad cuenta con conección a gas directa o no")
tabla_variables[39,] <- c("calefaccion", "Numérica", "Propiedad con calefacción")
tabla_variables[40,] <- c("Gym", "Numérica", "Propiedad con gym")
tabla_variables[41,] <- c("Air_Conditioning", "Numérica", "Propiedad con aire acondicionado")
tabla_variables[42,] <- c("Solarium", "Numérica", "Propiedad con solarium")



# Resultado
tabla_variables
```

# Análisis exploratorio de los datos

Con el objetivo de responder las preguntas planteadas, en primer lugar, se realizó una limpieza de los datos. Esta limpieza incluyó la eliminación de datos duplicados,valores atípocos y valores nulos. Además, se decició eliminar las columnas "Furnished...32", "Furnished...42", y "Floors". Las dos primeras columnas fueron eliminadas porque exixtía una tercera columna que contenía la misma información. La columna "Floors" fue eliminada debido a que no contenía información relevante, tenía muchos datos faltantes y los datos presentes eran inconsistentes y poco fiables.

Otra modificación que se realizó fue la agrupación de las zonas de Montevideo en municipios. Cada municipio, con sus respectivas zonas se puede observar en la "Tabla 1". También se convirtió la columna precio por precio por metros cuadrados, para tener un mejor análisis de los datos.

En ciertas columnas habían valores nulos, para evitar esto se realizo lo siguiente:

-   A la columna "direccion" se le asignó el nombre de la zona a la que correspondía la propiedad.
-   A la columna "precio_m2" se calculó la media de toda la columna y se le asignó este valor a cada fila que no tenía dato.
-   A la columna "condición" se le asigno la categoria mas frcuenta y lo mismo sucedio con la columna "disposición"

## Limpieza

Pasos: 1) Renombrar columnas de ingles a español

2)  Poner columna de precio por metro cuadrado

3)  Eliminar columnas inecesarias

4)  Eliminar duplicados

5)  Eliminar y rellenar valores nulos

6)  Eliminar outliers

## Renombrar las columnas

```{r, echo: false}

#datos

# IDEA: Podríamos cambiar también los elementos de las columnas que esten en ingles a español con case_match
datos


# Renombrabos las columnas de ingles a español
datos <- datos|>
  rename(precio = Price,
         nro_de_piso = Floor,
         cant_de_piso = Number_of_Floors,
         Gastos_Comunes = Common_Expenses,
         apartamentos_por_piso = Apartments_per_Floor,
         zona = Zone,
         Condicion = Condition,
         disposicion = Disposition,
         cant_cuartos = Bedrooms...18,
         cant_habitaciones = Bedrooms...13,
         año_de_const = Year_of_Construction,
         vista_al_mar = Sea_View,
         deposito = Storage,
         jardin = Garden,
         losa_radiante = Radiant_Floor_Heating,
         amueblado = Furnished...45,
         direccion = Address,
         tipo_prop = Property_Type,
         baños = Bathrooms,
         m2_const = Built_Square_Meters,
         m2_totales = Land_Square_Meters,
         m2_terraza = Terrace_Square_Meters,
         vivienda_social = Social_Housing,
         cant_de_est = Garages,
         coneccion_cas = Gas_Pipeline,
         calefaccion = Heating,
         zona_barbacoa = Grill,
         balcon = Balcony
         )

# Resultado
datos

```

2)  Poner columna de precio por metro cuadrado

```{r, echo: false}

# Pasar el precio a precio por metro cuadrado (?)
datos <- datos|>
  mutate(precio_m2 = precio/m2_const)

datos

```

3)  Eliminar columnas inecesarias

```{r, echo: false}

# Eliminamos columnas innecesarias
# Eliminamos Furnished...32 y Furnished...42 porque existe otra columna que tiene la misma información
# Eliminamos -Floors porque tenia muchos datos nulos, inconsistentes y poco fiables.
 datos <- 
   datos|>
    select(-Furnished...32, -Furnished...42, -Floors)#

datos
 

```

## Eliminar duplicados

```{r, echo: false}

# Contamos la cantidad de duplicados en el DataFrame
sum(duplicated(datos))


# Eliminamos los duplicados
datos <- datos[!duplicated(datos), ]
datos

# IMPORTANTE: Casi la mitad del dataframe estaba duplicada, paso de tener 2361 filas a tener 1078 !!



```

## Eliminar o rellenar valores nulos

```{r, echo: false}


# Función para detectar las columnas que tienen nulos

detector_nulos <- function(datos){ # Función
  data_nulos <- data.frame(cantidad_nulos = sapply(datos, function(x) sum(is.na(x)))) 
  # Aplicamos la función sapply par ver sumar la cantidad total de nulos en las los datos y a este objeto lo guardamos como un dataframe
  
  resultado <- data_nulos %>% filter(cantidad_nulos > 0)
  return(resultado)
  # De este DataFrame filtramos solo las columnas que tengan una cantidad total de valores nulos mayor a 0
}

detector_nulos(datos)



# Hay cuatro columnas que tienen valores nulos
# Que son Address, Condition, Disposition, Floors



# Las columnas con valores nulos son:
# direccion (209)   categorica
# Condicion (18)    categorica
# disposicion (13)  categorica
# precio_m2 (1)     númerica

# Vamos a usar el método de inputar los valores nulos con sus valores más comunes en el caso de variables categoricas y con su media en el caso de variables númericas.






```

```{r, echo: false}


datos
# Seleccionar el elemento que más se repite, para esto hacemos un table de la columna en el dataframe, ordenamos esa tabla de mayor a menor y seleccionamos el primer elemento en formato texto
nombre_1 <- names(sort(table(datos$Condicion), decreasing = TRUE)[1])

nombre_2 <- names(sort(table(datos$disposicion), decreasing = TRUE)[1])


```

```{r, echo: false}

# Reemplazamos los NaN de la columna Condicion con nombre_1 y los NaN de la columna disposicion con nombre_2
datos$Condicion[datos$Condicion %in% NA] <- nombre_1
datos$disposicion[datos$disposicion %in% NA] <- nombre_2


```

```{r, echo: false}



# Revisamos de nuevo la cantidad de nulos
# data_nulos <- data.frame(cantidad_nulos = sapply(datos, function(x) sum(is.na(x))))
# # Aplicamos la función sapply par ver sumar la cantidad total de nulos en las los datos y a este objeto lo guardamos como un dataframe
# 
# data_nulos %>% filter(cantidad_nulos > 0)


detector_nulos(datos)

```

```{r, echo: false}


# Filtrar los valores de Inf en la columnad de precio_m2
mean_filtrada <- datos %>%  # Datos
  filter(is.finite(precio_m2)) %>% # Obtenemos solo los datos finitos (que no sean infinito)
  summarise(media = mean(precio_m2)) %>% # Resumimos con la media
  pull(media) # Obtenemos la media como un número
mean_filtrada
  

# Reemplazamos los valores de Inf con la media
datos$precio_m2[datos$precio_m2 %in% "Inf"] <- mean_filtrada




```

```{r, echo: false}


# Reescribimos
datos <- datos[!is.na(datos$precio_m2), ]
datos



detector_nulos(datos)


```

```{r, echo: false}

# Para tratar los datos nulos en la columna de direccion vamos a reemplazarlos con datos de zona asociados

datos <- datos %>% # Datos
  mutate(direccion = if_else(is.na(direccion), zona, direccion)) 
# La columna dirección va a reemplazar a su valor nulo que esta en una fila X por el valor que esta en la columna de zona en esa misma fila X




detector_nulos(datos)


```

```{r}

```

## Detectar y eliminar valores outliers:

```{r, echo: false}

# Criterio de rango intercuartilico
# Es un criterio que se usa para detectar Outliers

# El criterio de rango intercuartilico dice que si un valor esta por
# debajo del limite inferior (que es el quantil Q1 -1,5 * IQR) o por
# encima del limite superior (que es el quantil Q3 + 1,5 * IQR)





# Función para el criterio de outliers
detectar_outliers_iqr <- function(x) { # Función
  Q1 <- quantile(x, 0.25)              # Primer Quantil
  Q3 <- quantile(x, 0.75)              # Tercer Quantil
  IQR <- Q3 - Q1                       # Rango Intercuartilico
  lower_bound <- Q1 - 1.5 * IQR        # Límite Inferior
  upper_bound <- Q3 + 1.5 * IQR        # Límite Superior
  
  outliers <- x[x < lower_bound | x > upper_bound] 
  # Si el valor esta por debajo del limite inferior o por encima del límite superior, entonces es un outlier
  
  return(outliers) # Retorno
}


# Pruebas
detectar_outliers_iqr(datos$precio)
detectar_outliers_iqr(datos$Gastos_Comunes)
detectar_outliers_iqr(datos$m2_const)
detectar_outliers_iqr(datos$m2_totales)



# # Vamos a eliminar los valores atípicos que estan en el dataframe
# datos <- datos %>% filter(
#   precio <= 150000 &
#   Gastos_Comunes <= 10000 &
#   cant_de_piso < 16 &
#   apartamentos_por_piso < 14 &
#   nro_de_piso < 43 &
#   apartamentos_por_piso < 11 &
#   m2_const < 3000 & m2_const > 0 &
#   m2_totales < 5000 & m2_const > 0 &
#   m2_terraza > 0 
#  )
# 
# datos




```



```{r}
# FILTROS
datos <- datos %>% filter(
  precio < 150000 &
  precio_m2 < 150000 &
  Gastos_Comunes < 277777)





max(datos$precio)
max(datos$precio_m2)
max(datos$Gastos_Comunes)

```

## Agrupar los barrios por municipios

```{r, echo: false}


datos <- datos %>% # Datos
  mutate(Municipio = case_when( # Casos donde a cada barrio le vamos a asociar un municipio
    
    zona %in% c("Cerro","La Teja","Paso de la Arena","Belvedere","Nuevo París","Prado")  ~ "Municipio_A",

    zona %in% c("Cordón","Parque Rodó","Palermo","Barrio Sur","Ciudad Vieja","Centro","Aguada","La Comercial") ~ "Municipio_B",

    zona %in% c("Aguada", "Arroyo Seco", "Atahualpa", "Bella Vista", "Brazo Oriental", "Capurro", "Goes", "Jacinto Vera", "La Comercial", "Mercado Modelo", "Reducto", "Villa Muñoz") ~ "Municipio_C",

    zona %in% c("Tres Cruces", "La Blanqueada", "Parque Batlle", "Villa Dolores", "Buceo", "Pocitos", "Punta Carretas") ~ "Municipio_CH",

    zona %in% c("Piedras Blancas", "Villa Española", "Unión","Bolivar","Cerrito") ~ "Municipio_D",

    zona %in% c("Malvín Norte","Malvín", "Carrasco Norte", "Carrasco", "Punta Gorda", "Buceo", "La Blanqueada") ~ "Municipio_E",

    zona %in% c("Maroñas", "Flor de Maroñas", "Villa Española", "Ituzaingó", "Jardines del Hipódromo", "Piedras Blancas") ~ "Municipio_F",

    zona %in% c("Lezica", "Peñarol", "Nuevo París", "Sayago", "Conciliación", "Colón") ~ "Municipio_G",

    TRUE ~ "Otro" # Por si hay barrios que no estén en la lista
  ))



datos
```

# Visualización

### Municipios

Pregunta 1) ¿Cómo se distribuyen los municipios y el precio promedio de alquiler por municipio? ¿Cómo se distribuyen la disposición de los alquileres y el precio promedio según la disposición de los alquileres?

```{r, echo: false}



# Gráfico 1: Conteo por Municipio
grafico1 <- ggplot(datos, aes(x = Municipio)) + 
  geom_bar() + 
  scale_x_discrete(breaks = unique(datos$Municipio)) +
  labs(title = "Cantidad de alquileres por municipio") + 
    theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))

  

# Gráfico 2: Grupo de Precio promedio por municipio
grupo_municipio <- datos %>% 
  group_by(Municipio) %>% 
  summarise(Cantidad = mean(precio))

# Gráfico de Precio promedio por municipio
grafico2 <- ggplot(grupo_municipio, aes(x = fct_reorder(Municipio, Cantidad), y = Cantidad)) + 
  geom_bar(stat = "identity") + 
  labs(x = "Municipio", y = "Precio promedio") + 
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))







# Gráfico 2: Conteo de Disposición
grafico7 <- ggplot(datos, aes(x = disposicion)) + 
  geom_bar() + 
  scale_x_discrete(breaks = unique(datos$disposicion)) +
  labs(title = "Distribución de disposición") +
    theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))

  


# Gráfico Grupo de Precio promedio por disposición
grupo_disposicion <- datos %>% 
  group_by(disposicion) %>% 
  summarise(Cantidad = mean(precio))


# Gráfico de Precio promedio por disposición
grafico8 <- ggplot(grupo_disposicion, aes(x = fct_reorder(disposicion, Cantidad), y = Cantidad)) + 
  geom_bar(stat = "identity") + 
  labs(x = "Disposición", y = "Precio promedio") + 
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))




# Grilla
grid.arrange(grafico1, grafico2, grafico7, grafico8, ncol = 2, nrow = 2)

```

Vemos que la mayoría de alquileres se dan en el municipio CH y la minoría de alquileres se dan en el Municipio F. Vemos también que los precios promedio de alquiler son más bajos en el Municipio G y más altos en el municipio A.

Luego en la disposición vemos que los más común son los inmuebles al frente, y vemos que en relación al precio promedio, todos tienen un precio similar (alrededor de los 500 dólares) a excepción de los que estan en el frente que tienen un precio más alto 1500 dólares

Pregunta 2) ¿Cómo se distribuye el tipo de propiedad de los alquileres y el precio promedio de el tipo de propiedad? ¿¿Cómo se distribuye las condiciones de los alquileres y el precio promedio según las condiciones de los alquileres?

```{r, echo: false}


# Gráfico 3: Tipo de propiedad
grafico3 <- ggplot(datos, aes(x = tipo_prop)) + 
  geom_bar() + 
  scale_x_discrete(breaks = unique(datos$tipo_prop)) +
  labs(title = "Distribución de tipos de propiedad") +
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))


# Grupo de Precio promedio por tipo de propiedad
grupo_tipo <- datos %>% 
  group_by(tipo_prop) %>% 
  summarise(Cantidad = mean(precio))


# Gráfico de Precio promedio por tipo de propiedad
grafico4 <- ggplot(grupo_tipo, aes(x = fct_reorder(tipo_prop, Cantidad), y = Cantidad)) + 
  geom_bar(stat = "identity") + 
  labs(x = "Tipo de Propiedad", y = "Precio promedio") + 
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))




# Gráfico 4: Condición de la vivienda
grafico5 <- ggplot(datos, aes(x = Condicion)) + 
  geom_bar() + 
  scale_x_discrete(breaks = unique(datos$Condicion)) +
  labs(title = "Distribución de condición de la vivienda") +
   theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))


# Grupo de Precio promedio por condición de la vivienda
grupo_condicion <- datos %>% 
  group_by(Condicion) %>% 
  summarise(Cantidad = mean(precio))


# Gráfico de Precio promedio por condición de la vivienda
grafico6 <- ggplot(grupo_condicion, aes(x = fct_reorder(Condicion, Cantidad), y = Cantidad)) + 
  geom_bar(stat = "identity") + 
  labs(x = "Condición", y = "Precio promedio") + 
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))



# Crear la grilla de gráficos
grid.arrange(grafico3, grafico4, grafico5, grafico6, ncol = 2, nrow = 2)

```

En los tipos de propiedad, mayoritariamente son apartamentos, en relación al precio vemos que los más caros son los edificios seguidos por las tierras.

Luego cuando nos referimos a la condición de las alquileres, vemos que la mayoría se encuentra en Excelente Condición o en Buena Condición, también una cantidad considerable esta recientemente construdido. En relación al precio, vemos que los alquileres Renovados, A ser Renovados y en Excelente Condición son los más caros.

Pregunta 3) ¿Cambia el precio con respecto al municipio en que se ecuestre la propiedad?

```{r, echo: false}


# Quitamos atípicos en el precio.


# 


# Elegimos los colores manualmente
colores_personalizados <- c(
  "Municipio_A" = "red",  "Municipio_B" = "blue",  "Municipio_C" = "green",                   "Municipio_CH" = "purple",  "Municipio_D" = "orange",   "Municipio_E" = "pink",
  "Municipio_F" = "brown",  "Municipio_G" = "cyan")





# Gráfico
ggplot(datos, aes(x = zona, y = precio, fill = Municipio)) +  # Datos, ejes y color
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +
  # Ancho y posición de las barras

  facet_grid(. ~ Municipio, scales = "free_x") +
  # Usar facet_grid para crear una grilla por Municipio

  labs(x = "Zona", y = "Precio", fill = "Municipio") + # Etiquetas de los ejes y la leyenda
  ggtitle("Precio por Zona y Municipio") + # Título
  scale_fill_manual(values = colores_personalizados) + # Cambiar la paleta de colores

  theme(plot.title = element_text(hjust = 0.5), # Centrar el título
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Centrar el título y modificar el texto de los elementos del eje X



```

Vemos que si, los barrios ubicados en el municipio A y E son los que tienen un precio más elevado, mientras que los barrios ubicados en los municipios D y G son los más baratos.

Pregunta 4) ¿Cómo se distribuyen los tipos de inmuebles por municipio?

```{r, echo: false}


#



# Gráfico
ggplot(datos, aes(x = tipo_prop, y = precio, fill = Municipio)) + # Datos, ejes y color
  geom_bar(stat = "identity", position = "dodge", width = 0.7) + # Ajustar el ancho de las barras
  facet_grid(. ~ Municipio, scales = "free_x") + # Usar facet_grid para crear una grilla por Municipio
  labs(x = "Zona", y = "Precio", fill = "Municipio") + # Etiquetas de los ejes y la leyenda
  ggtitle("Tipo de alquiler por municipio") + # Título del gráfico
  scale_fill_manual(values = colores_personalizados) + # Cambiar la paleta de colores
  theme(plot.title = element_text(hjust = 0.5), # Centrar el título
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Cambiar el ángulo y el tamaño del texto de los elementos del eje X







```

En general el tipo de alquiler más común varia según municipio, en los municipios A, C, D y G son más comunes los alquileres de Alquileres. En cambio en los municipios CH y E son más comunes los alquileres de casas, finalmente en el municipio B es más común el alquiler de Oficinas.

La mayoría de los alquileres se encuentran en Buena Condición o el Excelente Condición. También hay una parte considerable de alquileres que son nuevos.

La mayoría de los inmuebles estan en buena condición o excelente condición. Pocos de ellos estan en construcción, o con necesidad de mantenimiento o por ser renovados.

Pregunta 5) ¿Como se distribuyen las condiciones de las viviendas por municipio?

```{r, echo: false}



# 

# Gráfico
ggplot(datos, aes(x = Condicion, y = precio, fill = Municipio)) + # Datos, ejes y color
  geom_bar(stat = "identity", position = "dodge", width = 0.7) + # Ajustar el ancho de las barras
  facet_grid(. ~ Municipio, scales = "free_x") + # Usar facet_grid para crear una grilla por Municipio
  labs(x = "Zona", y = "Precio", fill = "Municipio") + # Etiquetas de los ejes y la leyenda
  ggtitle("Condición de la vivienda por Municipio") + # Título del gráfico
  scale_fill_manual(values = colores_personalizados) + # Cambiar la paleta de colores
  theme(plot.title = element_text(hjust = 0.5), # Centrar el título
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Cambiar el ángulo y el tamaño del texto de los elementos del eje X




```

En el Municipio A y E estan predominantemente los apartamentos en Excelente Condición. En los municipios C y F es más común los apartamentos con Buena Condición. n los municipios CH y B hay un empate entre la cantidad de apartamentos con Excelente Condición y Buena Condición.

### Gastos Cómunes

Pregunta 6) ¿Cómo se distribuyen los gastos comunes en relación al municipio, el tipo de propiedad y la condición de la propiedad?

```{r, echo: false}


# Gráfico 1: Municipio y Gastos Comunes
grafico9 <- ggplot(datos, aes(x = Municipio, y = Gastos_Comunes)) + 
  geom_bar(stat = "identity") + 
  theme(axis.text.x = element_text(size = 6)) +
  labs(title = "Gastos Comunes por Municipio")

# Gráfico 2: Tipo de propiedad y Gastos Comunes
grafico10 <- ggplot(datos, aes(x = tipo_prop, y = Gastos_Comunes)) + 
  geom_bar(stat = "identity") + 
  theme(axis.text.x = element_text(size = 6)) +
  labs(title = "Gastos Comunes por Tipo de Propiedad")

# Gráfico 3: Condición y Gastos Comunes
grafico11 <- ggplot(datos, aes(x = Condicion, y = Gastos_Comunes)) + 
  geom_bar(stat = "identity") + 
  theme(axis.text.x = element_text(size = 6)) +
  labs(title = "Gastos Comunes por Condición")

# Crear la grilla de gráficos
grid.arrange(grafico9, grafico10, grafico11, ncol = 1, nrow = 3)

```

La mayoría de gastos comúnes se dan en el municipio CH, donde recordemos estan la mayoría de los alquileres, y la minoría de gastos comunes se dan en el municipio F donde recordemos hay la menor cantidad de alquileres.

La mayoría de gastos comúnes se dan en los apartamentos, y muy pocos en las Oficinas. En los otros tipos de alquileres practicamente no existen gastos comunes.

En los alquileres que estan en Excelentes Condiciones los gastos comunes son más altos, similarmente ocurre con los que estan en Buena Condición. A mejor condición del alquiler, más altos seran los gastos comunes.

Pregunta 7) ¿Cómo influye la condición de el alquiler en el nivel de gastos comunes?

```{r, echo: false}


#
datos <- datos %>% filter()

max(datos$precio)
ggplot(datos, aes(x = tipo_prop, y = Gastos_Comunes, fill = Municipio)) + # Datos, ejes y municipio
  geom_bar(stat = "identity", position = "dodge", width = 0.7) + # Ajustar el ancho de las barras
  facet_grid(. ~ Municipio, scales = "free_x") + # Usar facet_grid para crear una grilla por Municipio
  labs(x = "Zona", y = "Precio", fill = "Municipio") + # Etiquetas de los ejes y la leyenda
  ggtitle("Gastos Comunes según tipo de alquiler por Municipio") + # Título del gráfico
  scale_fill_manual(values = colores_personalizados) + # Cambiar la paleta de colores
  theme(plot.title = element_text(hjust = 0.5), # Centrar el título
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Cambiar el ángulo y el tamaño del texto de los elementos del eje X


#




#max(datos$Gastos_Comunes)

```

Como mencionamos anteriormente, en todos los municipios se cumple el mismo patrón, que es que los Gastos Comunes se dan más en alquileres del tipo apartamento.

Pregunta 8) ¿Cómo se distribuyen los Gastos Comunes en relación a la condición del alquiler por Municipio?

```{r, echo: false}


# 


ggplot(datos, aes(x = Condicion, y = Gastos_Comunes, fill = Municipio)) + # Datos, ejes y color
  geom_bar(stat = "identity", position = "dodge", width = 0.7) + # Ajustar el ancho de las barras
  facet_grid(. ~ Municipio, scales = "free_x") + # Usar facet_grid para crear una grilla por Municipio
  labs(x = "Zona", y = "Precio", fill = "Municipio") + # Etiquetas de los ejes y la leyenda
  ggtitle("Gastos Comunes según el tipo de alquiler por Municipio") + # Título del gráfico
  scale_fill_manual(values = colores_personalizados) + # Cambiar la paleta de colores
  theme(plot.title = element_text(hjust = 0.5), # Centrar el título
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Cambiar el ángulo y el tamaño del texto de los elementos del eje X




```

En el municipio A los gastos comunes se dan más en los inmuebles que estan en Buena Condición.

En el municipio B y C los gastos comunes se da más en los inmuebles que estan en Excelente Condición.

En el municipio CH hay un empate entre los más comunes son la Excelente Condición y Renovados.

En el municipio E hay un empate entre los más comunes son la Excelente Condición y Buena Condición.

### Bernoulli

Pregunta 9) Cómo influye tener o no ciertas caracteristicas en el alquiler (como son wifi, una barbacoa o un jardin) en el precio con respecto a los alquileres que no lo tienen?

```{r, echo: false}

#
# 

# quitar variables: Furnished...32, Furnished...42, y Flors




# # Obtenemos las columnas que tienen valores entre 0 y 1

dum <- datos %>%
select("vista_al_mar","vivienda_social","Barbecue","Living_Room","Closet","Patio","Pool","Garage","Pet","coneccion_cas","Playroom","Duplex","calefaccion","WiFi","zona_barbacoa","Gym","balcon","deposito","Air_Conditioning","jardin","losa_radiante","Solarium","amueblado")




# Función para crear el dataframe que tiene 0 y 1 en sus filas, las variables en sus columnas y el promedio de precio en cada celda.

calcular_y_unir <- function(df, col, resultado_final) { # Función
  temp <- df %>%       # Datos
    group_by(valor = .data[[col]]) %>% # Agrupamos por todas las columnas
    summarise(Mean = mean(precio, na.rm = TRUE), .groups = "drop")
  # Resumimos con la media, ignorando los nulos

  colnames(temp)[2] <- paste0(col, "_Media") # A cada columna del dataframe resultante le vamos a pegar la palabra "_Mean"
  resultado_final <- left_join(resultado_final, temp, by = "valor", relationship = "many-to-one") # Hacemos un join con todos los resultados, teniendo la columna "valor" como columna común entre las tablas para unirlas
  return(resultado_final) # Resultado
}



# DataFrame inicial
resultado_final <- data.frame(valor = c(0, 1))


# Obtenemos las columnas del dataframe dum
columnas <- colnames(dum)



# Aplicar la función creada a cada columna
for (col in columnas) { # Para cada columna
  resultado_final <- calcular_y_unir(datos, col, resultado_final)
} # Aplicamos la función


# DataFrame resultante
resultado_final




```

```{r, echo: false}


#
# Función para gráficar 
funcion_dum <- function(datos){

# Pasamos los datos al formato largo con pivot_longer
  data_long <- datos %>%
    pivot_longer(-valor, names_to = "variable", values_to = "value")

  # Gráfico
  ggplot(data_long, aes(x = variable, y = value, fill = as.factor(valor))) + # Datos, ejes y color
    geom_bar(stat = "identity", position = position_dodge(width = 0.5)) +  # Gráfico de barras, con barras superpuestas
    labs(x = "Variable", y = "Value", fill = "Value") + # Nombre de los ejes
    theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Cambiar ángulo y tamaño del texto de los elementos del eje X
  
}


# Resultados
funcion_dum(resultado_final)
```

En este gráfico mostramos distintas variables que representan elementos de confort que puede tener un alquiler o no tener, como son WiFi, Barbacoa, Jardin, Aire Acondicionado, etc. Estas variables toman valores de 0 y 1 donde el 0 representa que el alquiler no posee ese bien y el 1 representa que el alquiler si posee ese bien. Estamos gráficando el precio promedio para cada una de esas variables y comparando como difiere el precio en caso de tener o no tener un bien. Vemos que en bienes como lo son: Aire Acondicionado, Amueblamiento, Barbacoa, Calefacción, Closet, Deposito, Garage, Jardin, Living, Losa Radiante, Patio, Habitación de juegos, Piscina, Vista al Mar y Barbacoa, el precio es más alto al tener que al no tener. En cambio, en el caso de Balcon, Conexión a Gas, Duplex, Gimansio, Equipo para mascotas, Centro de Bronceado, WiFi o en el caso de ser una vivienda social, el precio es más alto al no tener que al tener.

Pregunta 10) ¿Cómo influyen elementos relativos a los pisos como son el número de pisos, la cantidad de apartamentos en un piso o la cantidad de pisos en todo el edificio del inmueble al precio de alquiler?

```{r, echo: false}



#names(datos)


# Apartments_per_Floor (Cantidad de apartamentos en ese piso)   Español: apartamentos_por_piso


# Filtro:
# datos <- datos %>% filter( (cant_de_piso < 20 & cant_de_piso > 0) & (apartamentos_por_piso < 14 & apartamentos_por_piso > 0) & (nro_de_piso < 44) )




```

### Pisos

Pregunta 11) ¿Cómo cambia el precio según la cantidad de pisos que tiene el inmueble?

```{r}
datos <- datos


# GRUPOS
grupo_piso_1 <- datos %>% # Datos
  group_by(cant_de_piso) %>% # Agrupados por cantidad de pisos
  summarise(media_precio = mean(precio_m2)) # Resumidos por cantidad
#grupo_piso_1


grupo_piso_2 <- datos %>% # Datos
   group_by(nro_de_piso) %>% #Agrupados por número de piso
   summarise(media_precio = mean(precio_m2)) # Resumidos por media con respecto al precio
#grupo_piso_2


grupo_piso_3 <- datos %>%   # Datos
  group_by(apartamentos_por_piso) %>% # Agrupados por pisos por apartamentos
  summarise(media_precio = mean(precio_m2)) # Resumido por cantidad
#grupo_piso_3





# Gráfico 1: Cantidad de pisos
grafico12 <- ggplot(datos, aes(x = cant_de_piso)) +  
  geom_bar() +
  scale_x_continuous(breaks = unique(datos$cant_de_piso)) +
  labs(title = "Cantidad de pisos")



# Gráfico 2: Precio promedio por cantidad de pisos
grafico13 <- ggplot(grupo_piso_1, aes(x = cant_de_piso, y = media_precio)) +  
  geom_bar(stat = "identity") + 
  scale_x_continuous(breaks = unique(grupo_piso_1$cant_de_piso)) +
  labs(title = "Precio promedio por cantidad de pisos")



# Gráfico 3: Número de piso
grafico14 <- ggplot(datos, aes(x = nro_de_piso)) +  
  geom_bar() +
  scale_x_continuous(breaks = unique(datos$nro_de_piso)) +
  labs(title = "Número de piso")

# Gráfico 4: Precio promedio por número de piso
grafico15 <- ggplot(grupo_piso_2, aes(x = nro_de_piso, y = media_precio)) +  
  geom_bar(stat = "identity") + 
  scale_x_continuous(breaks = unique(grupo_piso_2$nro_de_piso)) +
  labs(title = "Precio promedio por número de piso")



# Gráfico 5: Apartamentos por piso
grafico16 <- ggplot(datos, aes(x = apartamentos_por_piso)) + 
  geom_bar() +
  scale_x_continuous(breaks = unique(datos$apartamentos_por_piso)) +
  labs(title = "Apartamentos por piso")

# Gráfico 6: Cantidad de apartamentos por piso
grafico17 <- ggplot(grupo_piso_3, aes(x = apartamentos_por_piso, y = media_precio)) +  
  geom_bar(stat = "identity") + 
  scale_x_continuous(breaks = unique(grupo_piso_3$apartamentos_por_piso)) +
  labs(title = "Cantidad de apartamentos por piso")




# Panel 2x3
grid.arrange(grafico12, grafico13, grafico14, grafico15, grafico16, grafico17, ncol = 2, nrow = 3)

# Hacer el filtro que nos recomendo la profe con los factores para que se vea mejor y no perder datos.
 

```

Vemos que los inmuebles en general tienen una distribución similar según su cantidad de pisos, excepto en el caso de los inmuebles con 10 pisos que tienen una ocurrencia mucho más alta. En relación, vemos que en general la mayoría se mantiene en los 1000 dolares para cantidades de pisos variadas, y en algunas cantidades de pisos como son 2, 12, 13 la media del precio esta cerca de los 2000 dolares.

En la distribución los números de piso 0 y 1, luego cuando los pisos van subiendo de número la frecuencia va disminuyendo (con algunas excepciones como son el número 4 y el 9). En relación al precio vemos que casi todos los números de piso tiene un precio similar (casi 1000\$) pero particularmente el piso con número 11 tiene un precio más elevado.

La distribución de la cantidad muestra que en un piso en general es más común encontrarse con 2, 3 o 4 apartamentos. En relación al precio vemos que esos pisos que tienen 2, 3 o 4 apartamentos también son los que tienen el precio más alto.

Pregunta 12) ¿Cómo afecta al inmueble el tener cierta cantidad de comodidades como son Baños, Garages, Cuartos y Habitaciones en el precio?

## Comodidades

```{r, echo: false}

# PRECIO SEGÚN CANTIDAD DE COMODIDADES como son Garages, Habitaciones, Cuartos, Baños 



# Recodificaciones:

datos <- datos %>%
  mutate(cant_de_est = case_when(
    cant_de_est == 0 ~ "0",
    cant_de_est == 1 ~ "1",
    cant_de_est == 2 ~ "2",
    TRUE ~ "más de 3"
  ))


datos <- datos %>%
  mutate(baños = case_when(
    baños == 0 ~ "0",
    baños == 1 ~ "1",
    baños == 2 ~ "2",
    TRUE ~ "mas de 2"
  ))


datos <- datos %>%
  mutate(cant_habitaciones = case_when(
    cant_habitaciones == 0 ~ "0",
    cant_habitaciones == 1 ~ "1",
    cant_habitaciones == 2 ~ "2",
    cant_habitaciones == 3 ~ "3",
    TRUE ~ "mas de 3"
  ))


datos <- datos %>%
  mutate(cant_cuartos = case_when(
    cant_cuartos == 0 ~ "0",
    cant_cuartos == 1 ~ "1",
    cant_cuartos == 2 ~ "2",
    cant_cuartos == 3 ~ "3",
    TRUE ~ "mas de 3"
  ))







Grupo_Baños <- datos %>%         # Datos
   group_by(baños) %>%  # Agrupado por cantidad de garages
   summarise(media_precio = mean(precio_m2)) # Resumido por media del precio



grupo_cant_habit <- datos %>%         # Datos
   group_by(cant_habitaciones) %>%  # Agrupado por cantidad de garages
   summarise(media_precio = mean(precio_m2)) # Resumido por media del precio



grupo_cant_cuartos <- datos %>%  # Datos 
   group_by(cant_cuartos) %>% # Agrupado por cantidad de cuartos
   summarise(media_precio = mean(precio_m2)) # Resumido por la media del precio



grupo_garage <- datos %>%         # Datos
   group_by(cant_de_est) %>%  # Agrupado por cantidad de garages
   summarise(media_precio = mean(precio_m2)) # Resumido por media del precio













# GRÁFICOS
grafico18 <- ggplot(datos, aes(x=baños)) + 
  geom_bar() + 
  scale_x_discrete(breaks =  Grupo_Baños$baños)


grafico19 <- ggplot(Grupo_Baños, aes(x=baños, y=media_precio)) + 
  geom_bar(stat="identity") +  
  scale_x_discrete(breaks =  Grupo_Baños$baños)





grafico20 <- ggplot(datos, aes(x=cant_habitaciones)) + 
  geom_bar() +  
  scale_x_discrete(breaks =  grupo_cant_habit$cant_habitaciones)


grafico21 <- ggplot(grupo_cant_habit, aes(x=cant_habitaciones, y=media_precio)) +  
  geom_bar(stat="identity") +  
  scale_x_discrete(breaks =  grupo_cant_habit$cant_habitaciones)






grafico22 <- ggplot(datos, aes(x=cant_cuartos)) + 
  geom_bar() +   
  scale_x_discrete(breaks =  grupo_cant_cuartos$cant_cuartos)


grafico23 <- ggplot(grupo_cant_cuartos, aes(x=cant_cuartos, y=media_precio)) +  
  geom_bar(stat="identity") +   
  scale_x_discrete(breaks =  grupo_cant_cuartos$cant_cuartos)






grafico24 <- ggplot(datos, aes(x=cant_de_est)) + 
  geom_bar() +  
  scale_x_discrete(breaks =  grupo_garage$cant_de_est)
#

grafico25 <- ggplot(grupo_garage, aes(x=cant_de_est, y=media_precio)) +  
  geom_bar(stat="identity") +   
  scale_x_discrete(breaks =  grupo_garage$cant_de_est)

# mat


# Panel 2x4 (dos columnas, 4 filas para 8 gráficos)
grid.arrange(grafico18, grafico19, grafico20, grafico21, grafico22, grafico23, grafico24, grafico25, ncol = 2, nrow=4)


```

Recodificar estas variables.

En relación a los baños lo más común es que los inmuebles tengan un baño, luego el tener 2 o 3 es menos común. Similarmente ocurre con la cantidad de estacionamientos (garages) donde lo más común es el que el inmueble tenga un garage o ninguno. En relación al número de cuartos y de habitaciones el patrón que se repite es tener 2 o 3 en el caso de habitaciones y 1 o 2 en el caso de cuartos. Pero vemos que siempre para todos estos elementos, se cumple la relación intuitiva de que a más número de baños, estacionamientos, habitaciones o cuartos, el precio del inmueble es más elevado.

### Mosaico

```{r}


datos$precio_m2 <- as.numeric(datos$precio_m2)

datos_3 <- datos %>%
  mutate(nro_de_piso = case_when(
    nro_de_piso >= 15 ~ "Número de piso mayor a 15",
    TRUE ~ "Número de piso menor a 15"))

datos_3 <- datos_3 %>%
  mutate(precio_m2 = case_when(
    precio_m2 >= 13 ~ "Precio m2 mayor 13",
    TRUE ~ "Precio m2 menor 13"
  ))


datos_3$precio_m2

install.packages("ggmosaic")
library(ggmosaic)
ggplot(data = datos_3) +
 geom_mosaic(aes(x = product(precio_m2, nro_de_piso), fill= precio_m2)) +
 labs(title='f(precio_m2 | nro_de_piso) f(nro_de_piso)')   


```

Pregunta 13) ¿Existe relación entre los metros cuadrados (por propiedad, tierra o totales) y el precio? (esta no)

```{r, echo: false}


# PRECIO SEGÚN METROS CUADRADOS EN DISTINTOS ELEMENTOS

# Filtramos para eliminar los nulos
# datos <- datos %>% filter( (m2_const < 2000 & m2_const > 0) & (m2_totales < 220 & m2_const > 0) & (m2_terraza > 0 & m2_terraza < 100) & (precio < 30000) )


datos
```

```{r, echo: false}

# Gráfico 1
grafico26 <- ggplot(datos, aes(x=m2_const, y=precio)) +  
  geom_point() + 
  labs(title = "Precio vs. m2 construidos")


# Gráfico 2
grafico27 <- ggplot(datos, aes(x=m2_terraza, y=precio)) +   
  geom_point() + 
  labs(title = "Precio vs. m2 de terraza")


# Gráfico 3
grafico28 <- ggplot(datos, aes(x=m2_totales, y=precio)) +   
  geom_point() + 
  labs(title = "Precio vs. m2 totales")



# Panel 1x3, 1 columna y 3 filas.
grid.arrange(grafico9, grafico10, grafico11, ncol = 1, nrow = 3)


```

Vemos que parece haber una relación clara sobre la relación entre metros cuadrados, ya sea en construcción, tierra o totales, y precio. El precio va a ser mayor conforme sean mayores los metros cuadrados.

Lo más común es tener inmuebles al frente, aunque cuando vamos al precio, vemos que si bien los que estan al frente tiene un precio un poco más alto, en general todos estan en niveles similares. (Cerca de los 1000\$)

# Modelo de regresión lineal multiple:

```{r, eval=FALSE}
datos
names(datos)

library(tidyverse)
library(GGally)
library(car)
library(skedastic)
library(robustbase)
library(tseries)


```

```{r, eval=FALSE}
# Función para reemplazar valores NA en 'direccion' con los valores de 'zona'
reemplazar_direccion <- function(datos) {
  if (!"direccion" %in% colnames(datos) || !"zona" %in% colnames(datos)) {
    stop("Las columnas 'direccion' y 'zona' deben estar presentes en los datos.")
  }
  datos$direccion <- ifelse(is.na(datos$direccion), datos$zona, datos$direccion)
  return(datos)
}

datos <- reemplazar_direccion(datos)

datos <- datos|>
  mutate(precio_m2 = precio/m2_const)


# Función para rellenar valores NA en 'precio_m2' con la media de los valores existentes
rellenar_na_precio_m2 <- function(datos) {
  # Verificar si la columna 'precio_m2' existe
  if (!"precio_m2" %in% colnames(datos)) {
    stop("La columna 'precio_m2' no está presente en los datos.")
  }
media_precio_m2 <- mean(datos$precio_m2, na.rm = TRUE)
  
  # Rellenar los valores NA con la media calculada
  datos$precio_m2[is.na(datos$precio_m2)] <- media_precio_m2
  
  return(datos)
}

datos <- rellenar_na_precio_m2(datos)

# Función para reemplazar valores NA en 'Condicion' con 'Good condition'
reemplazar_na_condicion <- function(datos) {
  if (!"Condicion" %in% colnames(datos)) {
    stop("La columna 'Condicion' no está presente en los datos.")
  }
  
  datos$Condicion[is.na(datos$Condicion)] <- "Good condition"
  
  return(datos)
}

datos <- reemplazar_na_condicion(datos)

# Función para reemplazar valores NA en 'disposicion' con 'Front'
reemplazar_na_disposicion <- function(datos) {
  if (!"disposicion" %in% colnames(datos)) {
    stop("La columna 'disposicion' no está presente en los datos.")
  }
  
  datos$disposicion[is.na(datos$disposicion)] <- "Front"
  
  return(datos)
}

datos <- reemplazar_na_disposicion(datos)

print(colSums(is.na(datos)))
```

```{r, eval=FALSE}

# Eliminamos columnas innecesarias
 datos <- 
   datos|>
   select(-Furnished...32, -Furnished...42, -Floors, -precio, -zona)

names(datos)
modelo <- lm(precio_m2 ~ ., data = datos)
vif(modelo)
summary(modelo)
names(datos)


vif_values <- vif(modelo)

# Mostrar los valores de VIF
print(vif_values) #
```

valores nulos

```{r, eval=FALSE}

datos_nulos <- data.frame(cantidad_2_nulos = sapply(datos, function(x) sum(is.na(x))))
# Aplicamos la función sapply par ver sumar la cantidad total de nulos en las los datos y a este objeto lo guardamos como un dataframe

data_2_nulos %>% filter(cantidad_2_nulos > 0)

datos <- datos[!duplicated(datos), ]
datos

table(datos$Condicion)
table(datos$disposicion)




```

```{r, eval=FALSE}
colnames(datos)
datos

```

```{r}





```

```{r}
colnames(datos)
#

```

```{r}



```

```{r}



```

```{r}



```

## Visualización

```{r}
#| echo: false
# Pregunta 1) ¿Cambia el precio con respecto al barrio en que se ecuestre la propiedad?


# Elegimos los colores manualmente
colores_personalizados <- c(
  "Municipio_A" = "red",  "Municipio_B" = "blue",  "Municipio_C" = "green",                   "Municipio_CH" = "purple",  "Municipio_D" = "orange",   "Municipio_E" = "pink",
  "Municipio_F" = "brown",  "Municipio_G" = "cyan")


# Gráfico
ggplot(datos, aes(x = zona, y = precio_m2, fill = Municipio)) +  # Datos, ejes y color
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +
  # Ancho y posición de las barras

  facet_grid(. ~ Municipio, scales = "free_x") +
  # Usar facet_grid para crear una grilla por Municipio

  labs(x = "Zona", y = "Precio por m^2", fill = "Municipio") + # Etiquetas de los ejes y la leyenda
  ggtitle("Precio por Zona y Municipio") + # Título
  scale_fill_manual(values = colores_personalizados) + # Cambiar la paleta de colores

  theme(plot.title = element_text(hjust = 0.5), # Centrar el título
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Centrar el título y modificar el texto de los elementos del eje X
```

En este gráfico se puede observar que los municipios B, CH y E tienen los precios por metro cuadrado más altos. Dentro del municipio B, la zona con el precio por metro cuadrado más elevado es Centro. En el municipio CH, la zona más costosa es Pocitos, mientras que en el municipio E, la zona con el mayor precio por metro cuadrado es Carrasco.

```{r}
#| echo: false
# Pregunta 3) Qué tipo de inmuebles para alquilar hay?


grupo_tipo <- datos %>% # Datos
  group_by(tipo_prop) %>% # Agrupar por tipo de propiedad
  summarise(Cantidad = n()) # Resumir por cantidad 
grupo_tipo


# Gráfico
ggplot(grupo_tipo, aes(x=fct_reorder(tipo_prop, Cantidad), y=Cantidad)) + # Datos y ejes
  geom_bar(stat="identity") + # Gráfico de barras
  labs(x="Municipio") + # Nombres de los ejes
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size=8))
# Cambiar el ángulo y el tamaño del texto de los elementos del eje X
```

```{r}
#| echo: false
grupo_estado <- datos %>% # Datos
  group_by(Condicion) %>%   # Agrupar por condición de la vivienda
  summarise(Cantidad = n()) # Resumir por la cantidad
grupo_estado


# Gráfico
ggplot(grupo_estado, aes(x=fct_reorder(Condicion, Cantidad), y=Cantidad)) + # Datos y ejes
  geom_bar(stat="identity") + # Gráfico de barras
  labs(x="Municipio", y="Precio") + # Nombre de los ejes
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size=8))
# Cambiar el ángulo y el tamaño del texto de los elementos del eje X
```

Al analizar los dos gráficos anteriores, se destaca que la mayoría de los alquileres corresponden a apartamentos, mientras que las propiedades de tierra, negocios especiales, edificios o garajes son menos comunes. Esta tendencia sugiere una alta disponibilidad de apartamentos en Montevideo, lo cual representa una oportunidad licrativa para los inversionistas.

Al considerar el primer gráfico, que muestra que la mayoría de las propiedades están en buenas o excelentes condiciones, los potenciales inquilinos se beneficiarían al evitar la necesidad de realizar modificaciones significativas en las propiedades disponibles para alquilar.

```{r}
# Gráfico
ggplot(datos, aes(x = fct_infreq(tipo_prop), y = precio_m2, fill = Municipio)) + # Datos, ejes y color
  geom_bar(stat = "identity", position = "dodge", width = 0.7) + # Ajustar el ancho de las barras
  facet_grid(. ~ Municipio, scales = "free_x") + # Usar facet_grid para crear una grilla por Municipio
  labs(x = "Zona", y = "Precio", fill = "Municipio") + # Etiquetas de los ejes y la leyenda
  ggtitle("Tipo de alquiler por municipio") + # Título del gráfico
  scale_fill_manual(values = colores_personalizados) + # Cambiar la paleta de colores
  theme(plot.title = element_text(hjust = 0.5), # Centrar el título
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Cambiar el ángulo y el tamaño del texto de los elementos del eje X
```


En este gráfico trata de explicar que tipo de propiedad se alquila en cada municipio. En los municipios A, CH, es mas comun alquilar apartamentos aunque tambien se alquilan otro tipo de propiedades. En contraste, en el municipio B y otros municipios, predominan las oficinas. Esto sugiere que el tipo de propiedad alquilada varía según el municipio.

Aunque el gráfico anterior indicaba que los apartamentos eran el tipo de propiedad más común en general, esta tendencia puede estar influenciada por datos específicos, como los del Prado, que podrían distorsionar los resultados generales

```{r, echo: false}
# Gráfico 1: Conteo por Municipio
grafico1 <- ggplot(datos, aes(x = Municipio)) + 
  geom_bar() + 
  scale_x_discrete(breaks = unique(datos$Municipio)) +
  labs(title = "Cantidad de alquileres por municipio") + 
    theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))

  

# Gráfico 2: Grupo de Precio por metro cuadrado por municipio
grupo_municipio <- datos %>% 
  group_by(Municipio) %>% 
  summarise(Cantidad = mean(precio_m2))

# Gráfico de Precio por metro cuadrado por municipio
grafico2 <- ggplot(grupo_municipio, aes(x = fct_reorder(Municipio, Cantidad), y = Cantidad)) + 
  geom_bar(stat = "identity") + 
  labs(x = "Municipio", y = "Precio promedio") + 
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))


# Gráfico 2: Conteo de Disposición
grafico7 <- ggplot(datos, aes(x = disposicion)) + 
  geom_bar() + 
  #scale_x_discrete(breaks = unique(datos$disposicion)) +
  labs(title = "Distribución de disposición") +
    theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))



# Gráfico Grupo de Precio precio por metro cuadrado por disposición
grupo_disposicion <- datos %>% 
  group_by(disposicion) %>% 
  summarise(Cantidad = precio_m2)


# Gráfico de Precio precio por metro cuadrado por disposición
grafico8 <- ggplot(grupo_disposicion, aes(x = fct_reorder(disposicion, Cantidad), y = Cantidad)) + 
  geom_bar(stat = "identity") + 
  labs(x = "Disposición", y = "Precio promedio") + 
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))




# Grilla
grid.arrange(grafico1, grafico2, grafico7, grafico8, ncol = 2, nrow = 2)

```

Al analizar la distribución de alquileres, observamos que la mayoria de los propiedades a alquilar se encuentram en el municipio CH. En contraste, el municipio F presenta la menor cantidad de alquileres.

En terminos de precios por metro cuadrado de alquiler, identificamos que el municipio F, ofrece las tarifas mas bajas, mientras que el municipio CH se destaca por tener los precios más altos.

En cuanto a la disposición de las propiedades, la mayoría de las propiedades en alquiler están sutuadas al frente. Al analizar los precios por metro cuadrado relacionados con la disposición de las propiedades, encontramos que la mayoría tienen un precio diferente. Las propiedades que esta situadas al fente su precio por metro cuadrado es superior a los 7500 dolares mientras que los que estan en el interior y "side" su precio es inferior a lps 2500 dolares por metro cuadrado.

Pregunta 7) ¿Cómo influye la condición de el alquiler en el nivel de gastos comunes?

```{r}

#
datos <- datos %>% filter()

max(datos$precio)
ggplot(datos, aes(x = tipo_prop, y = Gastos_Comunes, fill = Municipio)) + # Datos, ejes y municipio
  geom_bar(stat = "identity", position = "dodge", width = 0.7) + # Ajustar el ancho de las barras
  facet_grid(. ~ Municipio, scales = "free_x") + # Usar facet_grid para crear una grilla por Municipio
  labs(x = "Zona", y = "Precio", fill = "Municipio") + # Etiquetas de los ejes y la leyenda
  ggtitle("Gastos Comunes según tipo de alquiler por Municipio") + # Título del gráfico
  scale_fill_manual(values = colores_personalizados) + # Cambiar la paleta de colores
  theme(plot.title = element_text(hjust = 0.5), # Centrar el título
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Cambiar el ángulo y el tamaño del texto de los elementos del eje X


```

Como mencionamos anteriormente, en todos los municipios se cumple el mismo patrón, que es que los Gastos Comunes se dan más en alquileres del tipo apartamento.

Pregunta 8) ¿Cómo se distribuyen los Gastos Comunes en relación a la condición del alquiler por Municipio?

```{r, echo: false}


# 


ggplot(datos, aes(x = condicion, y = Gastos_Comunes, fill = Municipio)) + # Datos, ejes y color
  geom_bar(stat = "identity", position = "dodge", width = 0.7) + # Ajustar el ancho de las barras
  facet_grid(. ~ Municipio, scales = "free_x") + # Usar facet_grid para crear una grilla por Municipio
  labs(x = "Zona", y = "Precio", fill = "Municipio") + # Etiquetas de los ejes y la leyenda
  ggtitle("Gastos Comunes según el tipo de alquiler por Municipio") + # Título del gráfico
  scale_fill_manual(values = colores_personalizados) + # Cambiar la paleta de colores
  theme(plot.title = element_text(hjust = 0.5), # Centrar el título
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Cambiar el ángulo y el tamaño del texto de los elementos del eje X




```

En el municipio A los gastos comunes se dan más en los inmuebles que estan en Buena Condición.

En el municipio B y C los gastos comunes se da más en los inmuebles que estan en Excelente Condición.

En el municipio CH hay un empate entre los más comunes son la Excelente Condición y Renovados.

En el municipio E hay un empate entre los más comunes son la Excelente Condición y Buena Condición.

Pregunta 9) Cómo influye tener o no ciertas caracteristicas en el alquiler (como son wifi, una barbacoa o un jardin) en el precio con respecto a los alquileres que no lo tienen?

```{r, echo: false}



# # Obtenemos las columnas que tienen valores entre 0 y 1
#datos
dum <- datos %>%
select("vista_al_mar","vivienda_social","Barbecue","Living_Room","Closet","Patio","Pool","Garage","Pet","conexion_gas","Playroom","Duplex","calefaccion","WiFi","zona_barbacoa","Gym","balcon","deposito","Air_Conditioning","jardin","losa_radiante","Solarium","amueblado")




# Función para crear el dataframe que tiene 0 y 1 en sus filas, las variables en sus columnas y el promedio de precio en cada celda.

calcular_y_unir <- function(df, col, resultado_final) { # Función
  temp <- df %>%       # Datos
    group_by(valor = .data[[col]]) %>% # Agrupamos por todas las columnas
    summarise(Mean = mean(precio_m2, na.rm = TRUE), .groups = "drop")
  # Resumimos con la media, ignorando los nulos

  colnames(temp)[2] <- paste0(col, "_Media") # A cada columna del dataframe resultante le vamos a pegar la palabra "_Mean"
  resultado_final <- left_join(resultado_final, temp, by = "valor", relationship = "many-to-one") # Hacemos un join con todos los resultados, teniendo la columna "valor" como columna común entre las tablas para unirlas
  return(resultado_final) # Resultado
}



# DataFrame inicial
resultado_final <- data.frame(valor = c(0, 1))


# Obtenemos las columnas del dataframe dum
columnas <- colnames(dum)



# Aplicar la función creada a cada columna
for (col in columnas) { # Para cada columna
  resultado_final <- calcular_y_unir(datos, col, resultado_final)
} # Aplicamos la función


# DataFrame resultante
resultado_final



# CUIDADO: Este código da error cuando convierto las columnas a factores como hace el código que esta arriba que sirve para el modelo lineal, puedo pensar este código distinto, o ese código que convierte a factor ponerlo abajo cuando empezemos el modelo lineal
```

```{r, echo: false}


#
# Función para gráficar 
funcion_dum <- function(datos){

# Pasamos los datos al formato largo con pivot_longer
  data_long <- resultado_final %>%
    pivot_longer(-valor, names_to = "variable", values_to = "value")

  # Gráfico
  ggplot(data_long, aes(x = variable, y = value, fill = as.factor(valor))) + # Datos, ejes y color
    geom_bar(stat = "identity", position = position_dodge(width = 0.5)) +  # Gráfico de barras, con barras superpuestas
    labs(x = "Variable", y = "Value", fill = "Value") + # Nombre de los ejes
    theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Cambiar ángulo y tamaño del texto de los elementos del eje X
  
}


# Resultados
funcion_dum(resultado_final)



```

En este gráfico mostramos distintas variables que representan elementos de confort que puede tener un alquiler o no tener, como son WiFi, Barbacoa, Jardin, Aire Acondicionado, etc. Estas variables toman valores de 0 y 1 donde el 0 representa que el alquiler no posee ese bien y el 1 representa que el alquiler si posee ese bien. Estamos gráficando el precio promedio para cada una de esas variables y comparando como difiere el precio en caso de tener o no tener un bien. Vemos que en bienes como lo son: Aire Acondicionado, Amueblamiento, Barbacoa, Calefacción, Closet, Deposito, Garage, Jardin, Living, Losa Radiante, Patio, Habitación de juegos, Piscina, Vista al Mar y Barbacoa, el precio es más alto al tener que al no tener. En cambio, en el caso de Balcon, Conexión a Gas, Duplex, Gimansio, Equipo para mascotas, Centro de Bronceado, WiFi o en el caso de ser una vivienda social, el precio es más alto al no tener que al tener.

Pregunta 11) ¿Cómo cambia el precio según la cantidad de pisos que tiene el inmueble?

```{r, echo: false}

# 


# GRUPOS
grupo_piso_1 <- datos %>% # Datos
  group_by(cant_de_piso) %>% # Agrupados por cantidad de pisos
  summarise(media_precio = mean(precio_m2)) # Resumidos por cantidad
#grupo_piso_1


grupo_piso_2 <- datos %>% # Datos
   group_by(nro_de_piso) %>% #Agrupados por número de piso
   summarise(media_precio = mean(precio_m2)) # Resumidos por media con respecto al precio
#grupo_piso_2


grupo_piso_3 <- datos %>%   # Datos
  group_by(apartamentos_por_piso) %>% # Agrupados por pisos por apartamentos
  summarise(media_precio = mean(precio_m2)) # Resumido por cantidad
#grupo_piso_3





# Gráfico 1: Cantidad de pisos
grafico12 <- ggplot(datos, aes(x = cant_de_piso)) +  
  geom_bar() +
  scale_x_continuous(breaks = unique(datos$cant_de_piso)) +
  labs(title = "Cantidad de pisos")



# Gráfico 2: Precio promedio por cantidad de pisos
grafico13 <- ggplot(grupo_piso_1, aes(x = cant_de_piso, y = media_precio)) +  
  geom_bar(stat = "identity") + 
  scale_x_continuous(breaks = unique(grupo_piso_1$cant_de_piso)) +
  labs(title = "Precio promedio por cantidad de pisos")



# Gráfico 3: Número de piso
grafico14 <- ggplot(datos, aes(x = nro_de_piso)) +  
  geom_bar() +
  scale_x_continuous(breaks = unique(datos$nro_de_piso)) +
  labs(title = "Número de piso")

# Gráfico 4: Precio promedio por número de piso
grafico15 <- ggplot(grupo_piso_2, aes(x = nro_de_piso, y = media_precio)) +  
  geom_bar(stat = "identity") + 
  scale_x_continuous(breaks = unique(grupo_piso_2$nro_de_piso)) +
  labs(title = "Precio promedio por número de piso")



# Gráfico 5: Apartamentos por piso
grafico16 <- ggplot(datos, aes(x = apartamentos_por_piso)) + 
  geom_bar() +
  scale_x_continuous(breaks = unique(datos$apartamentos_por_piso)) +
  labs(title = "Apartamentos por piso")

# Gráfico 6: Cantidad de apartamentos por piso
grafico17 <- ggplot(grupo_piso_3, aes(x = apartamentos_por_piso, y = media_precio)) +  
  geom_bar(stat = "identity") + 
  scale_x_continuous(breaks = unique(grupo_piso_3$apartamentos_por_piso)) +
  labs(title = "Cantidad de apartamentos por piso")




# Panel 2x3
grid.arrange(grafico12, grafico13, grafico14, grafico15, grafico16, grafico17, ncol = 2, nrow = 3)

# Hacer el filtro que nos recomendo la profe con los factores para que se vea mejor y no perder datos.
```

(VALENTINA) sacaria este Pregunta 11) ¿Cómo cambia el precio según la cantidad de pisos que tiene el inmueble?

```{r}
#ARREGLAR
# 


# GRUPOS
grupo_piso_1 <- datos %>% # Datos
  group_by(cant_de_piso) %>% # Agrupados por cantidad de pisos
  summarise(media_precio = mean(precio_m2)) # Resumidos por cantidad
#grupo_piso_1


grupo_piso_2 <- datos %>% # Datos
   group_by(nro_de_piso) %>% #Agrupados por número de piso
   summarise(media_precio = mean(precio_m2)) # Resumidos por media con respecto al precio
#grupo_piso_2


grupo_piso_3 <- datos %>%   # Datos
  group_by(apartamentos_por_piso) %>% # Agrupados por pisos por apartamentos
  summarise(media_precio = mean(precio_m2)) # Resumido por cantidad
#grupo_piso_3





# Gráfico 1: Cantidad de pisos
grafico12 <- ggplot(datos, aes(x = cant_de_piso)) +  
  geom_bar() +
  scale_x_continuous(breaks = unique(datos$cant_de_piso)) +
  labs(title = "Cantidad de pisos")



# Gráfico 2: Precio promedio por cantidad de pisos
grafico13 <- ggplot(grupo_piso_1, aes(x = cant_de_piso, y = media_precio)) +  
  geom_bar(stat = "identity") + 
  scale_x_continuous(breaks = unique(grupo_piso_1$cant_de_piso)) +
  labs(title = "Precio promedio por cantidad de pisos")



# Gráfico 3: Número de piso
grafico14 <- ggplot(datos, aes(x = nro_de_piso)) +  
  geom_bar() +
  scale_x_continuous(breaks = unique(datos$nro_de_piso)) +
  labs(title = "Número de piso")

# Gráfico 4: Precio promedio por número de piso
grafico15 <- ggplot(grupo_piso_2, aes(x = nro_de_piso, y = media_precio)) +  
  geom_bar(stat = "identity") + 
  scale_x_continuous(breaks = unique(grupo_piso_2$nro_de_piso)) +
  labs(title = "Precio promedio por número de piso")



# Gráfico 5: Apartamentos por piso
grafico16 <- ggplot(datos, aes(x = apartamentos_por_piso)) + 
  geom_bar() +
  scale_x_continuous(breaks = unique(datos$apartamentos_por_piso)) +
  labs(title = "Apartamentos por piso")

# Gráfico 6: Cantidad de apartamentos por piso
grafico17 <- ggplot(grupo_piso_3, aes(x = apartamentos_por_piso, y = media_precio)) +  
  geom_bar(stat = "identity") + 
  scale_x_continuous(breaks = unique(grupo_piso_3$apartamentos_por_piso)) +
  labs(title = "Cantidad de apartamentos por piso")




# Panel 2x3
grid.arrange(grafico12, grafico13, grafico14, grafico15, grafico16, grafico17, ncol = 2, nrow = 3)

# Hacer el filtro que nos recomendo la profe con los factores para que se vea mejor y no perder datos.
```

Vemos que los inmuebles en general tienen una distribución similar según su cantidad de pisos, excepto en el caso de los inmuebles con 10 pisos que tienen una ocurrencia mucho más alta. En relación, vemos que en general la mayoría se mantiene en los 1000 dolares para cantidades de pisos variadas, y en algunas cantidades de pisos como son 2, 12, 13 la media del precio esta cerca de los 2000 dolares.

En la distribución los números de piso 0 y 1, luego cuando los pisos van subiendo de número la frecuencia va disminuyendo (con algunas excepciones como son el número 4 y el 9). En relación al precio vemos que casi todos los números de piso tiene un precio similar (casi 1000\$) pero particularmente el piso con número 11 tiene un precio más elevado.

La distribución de la cantidad muestra que en un piso en general es más común encontrarse con 2, 3 o 4 apartamentos. En relación al precio vemos que esos pisos que tienen 2, 3 o 4 apartamentos también son los que tienen el precio más alto.

Pregunta 6) ¿Cómo se distribuyen los gastos comunes en relación al municipio, el tipo de propiedad y la condición de la propiedad?

```{r}

# Gráfico 1: Municipio y Gastos Comunes
grafico9 <- ggplot(datos, aes(x = Municipio, y = Gastos_Comunes)) + 
  geom_bar(stat = "identity") + 
  theme(axis.text.x = element_text(size = 6)) +
  labs(title = "Gastos Comunes por Municipio")

# Gráfico 2: Tipo de propiedad y Gastos Comunes
grafico10 <- ggplot(datos, aes(x = tipo_prop, y = Gastos_Comunes)) +
  geom_bar(stat = "identity") + 
  theme(axis.text.x = element_text(size = 6)) +
  labs(title = "Gastos Comunes por Tipo de Propiedad")

# Gráfico 3: Condición y Gastos Comunes
grafico11 <- ggplot(datos, aes(x = condicion, y = Gastos_Comunes)) +
  geom_bar(stat = "identity") + 
  theme(axis.text.x = element_text(size = 6)) +
  labs(title = "Gastos Comunes por Condición")

# Crear la grilla de gráficos
grid.arrange(grafico9, grafico10, grafico11, ncol = 1, nrow = 3)

```

La mayoría de gastos comúnes se dan en el municipio CH, donde recordemos estan la mayoría de los alquileres, y la minoría de gastos comunes se dan en el municipio F donde recordemos hay la menor cantidad de alquileres.

La mayoría de gastos comúnes se dan en los apartamentos, y muy pocos en las Oficinas. En los otros tipos de alquileres practicamente no existen gastos comunes.

En los alquileres que estan en Excelentes Condiciones los gastos comunes son más altos, similarmente ocurre con los que estan en Buena Condición. A mejor condición del alquiler, más altos seran los gastos comunes.

La mayoría de los gastos comunes se registran en el municipio CH, donde también se encuentra la mayor concentración de alquileres. En contraste, el municipio F presenta la menor cantidad de gastos comunes, correspondiente a la menor cantidad de alquileres en esa área.

En cuanto a los tipos de propiedad, los gastos comunes son predominantes en los apartamentos, mientras que son muy pocos en las oficinas. En los demás tipos de alquileres, los gastos comunes prácticamente no existen.

Respecto a la condición de los alquileres, los gastos comunes son más altos en propiedades en Excelente Condición y también elevados en aquellas en Buena Condición. En general, a mejor condición del alquiler, mayores son los gastos comunes.

Pregunta 5) ¿Cómo se distribuyen las condiciones de las viviendas por municipio?

```{r}
 

# Gráfico
ggplot(datos, aes(x = condicion, y = precio_m2, fill = Municipio)) + # Datos, ejes y color
  geom_bar(stat = "identity", position = "dodge", width = 0.7) + # Ajustar el ancho de las barras
  facet_grid(. ~ Municipio, scales = "free_x") + # Usar facet_grid para crear una grilla por Municipio
  labs(x = "Zona", y = "Precio", fill = "Municipio") + # Etiquetas de los ejes y la leyenda
  ggtitle("Condición de la vivienda por Municipio") + # Título del gráfico
  scale_fill_manual(values = colores_personalizados) + # Cambiar la paleta de colores
  theme(plot.title = element_text(hjust = 0.5), # Centrar el título
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Cambiar el ángulo y el tamaño del texto de los elementos del eje X




```

En el Municipio A y E estan predominantemente los apartamentos en Excelente Condición. En los municipios C y F es más común los apartamentos con Buena Condición. n los municipios CH y B hay un empate entre la cantidad de apartamentos con Excelente Condición y Buena Condición.

Pregunta 4) ¿Cómo se distribuyen los tipos de inmuebles por municipio?

ESTO PARA A MI (VALENTINA) SE PUEDE VER EN LA SHINY

```{r}
datos <- datos %>% filter(precio_m2 < 400)

colores_personalizados <- c(
  "Municipio_A" = "red",  "Municipio_B" = "blue",  "Municipio_C" = "green",                   "Municipio_CH" = "purple",  "Municipio_D" = "orange",   "Municipio_E" = "pink",
  "Municipio_F" = "brown",  "Municipio_G" = "cyan")

# Gráfico
ggplot(datos, aes(x = tipo_prop, y = precio_m2, fill = Municipio)) + # Datos, ejes y color
  geom_bar(stat = "identity", position = "dodge", width = 0.7) + # Ajustar el ancho de las barras
  facet_grid(. ~ Municipio, scales = "free_x") + # Usar facet_grid para crear una grilla por Municipio
  labs(x = "Zona", y = "Precio", fill = "Municipio") + # Etiquetas de los ejes y la leyenda
  ggtitle("Tipo de alquiler por municipio") + # Título del gráfico
  scale_fill_manual(values = colores_personalizados) + # Cambiar la paleta de colores
  theme(plot.title = element_text(hjust = 0.5), # Centrar el título
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Cambiar el ángulo y el tamaño del texto de los elementos del eje X

```

Pregunta 3) ¿Cambia el precio con respecto al municipio en que se ecuestre la propiedad

```{r}

datos <- datos %>% filter(precio_m2 < 400)



# Elegimos los colores manualmente
colores_personalizados <- c(
  "Municipio_A" = "red",  "Municipio_B" = "blue",  "Municipio_C" = "green",                   "Municipio_CH" = "purple",  "Municipio_D" = "orange",   "Municipio_E" = "pink",
  "Municipio_F" = "brown",  "Municipio_G" = "cyan")





# Gráfico
ggplot(datos, aes(x = zona, y = precio_m2, fill = Municipio)) +  # Datos, ejes y color
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +
  # Ancho y posición de las barras

  facet_grid(. ~ Municipio, scales = "free_x") +
  # Usar facet_grid para crear una grilla por Municipio

  labs(x = "Zona", y = "Precio", fill = "Municipio") + # Etiquetas de los ejes y la leyenda
  ggtitle("Precio por Zona y Municipio") + # Título
  scale_fill_manual(values = colores_personalizados) + # Cambiar la paleta de colores

  theme(plot.title = element_text(hjust = 0.5), # Centrar el título
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Centrar el título y modificar el texto de los elementos del eje X


# Filtro para quitar los outliers

```

La respuesta es que si, los barrios ubicados en el municipio E, B y CH son los que tienen el precio promedio por metro cuadrado más alto. Dentro del municipio E el barrio más caro es Carrasco, dentro del municipio B el barrio más caro es Centro, dentro del municipio CH el barrio más caro es Pocitos.

En general el tipo de alquiler más común varia según municipio, en los municipios A, C, D y G son más comunes los alquileres de Alquileres. En cambio en los municipios CH y E son más comunes los alquileres de casas, finalmente en el municipio B es más común el alquiler de Oficinas.

La mayoría de los alquileres se encuentran en Buena Condición o el Excelente Condición. También hay una parte considerable de alquileres que son nuevos.

La mayoría de los inmuebles estan en buena condición o excelente condición. Pocos de ellos estan en construcción, o con necesidad de mantenimiento o por ser renovados












## Exportar datos
```{r}


library(writexl)
write_xlsx(datos, path = here("Datos","datos_limpios.xlsx"))

#here()


max(datos$precio)

```

