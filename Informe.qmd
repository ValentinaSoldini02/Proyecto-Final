---
title: "Informe"
format: pdf
author: "Diego Da Rosa, Valentina Soldini, Nahuel Bizoso"
editor: visual
---

```{r}
#| echo: false
library(gridExtra)
library(tidyverse)
library(GGally)
library(car)
library(skedastic)
library(robustbase)
library(tseries)
library(here)
library(readxl)
library(ggplot2)
library(forcats)
library(gt)
library(dplyr)
library(randomForest)
library(modelr)
library(knitr)
```

## Introducción:

El mercado inmobiliario ha sido ha sido de gran importancia durante muchos años, tanto para inversores como para personas que buscan un alquiler una propiedad. La variabilidad de los precios puede depender de diferentes factores, como es la ubicación, caracteristicas de la propiedad, también la seguridad de la zona y algunos otros aspectos. Este estudio tiene como objetivo analizar como varían los precios de las propiedades teniendo en cuenta diferentes aspectos. Para realizar este análisis, plenteamos las diferentes preguntas de investigación:

-   ¿Cambia el precio con respecto al barrio en que se ecuestre la propiedad?
-   ¿En que municipio hay más alquileres?
-   ¿Cuál es la variable que más influye en el precio?
-   ¿Influye cuán peligroso es la zona para alquilar la propiedad y disminuye el precio? Mejorará el modelo?
-   ¿Hay alguna variable que debería de eliminarse al modelo?

Estas preguntas guiarán nuestro analisis para comprender mejor los factores que afectan los precios en el mercado inmobiliario y proporcionar una herramienta útil para los distintos agentes, ya sean compradores, vendedores, inversores y agentes inmobiliarios.

## Datos

Los datos utilizados en este análisis se han extraidos de una pagina web llamada **kaggle**, consiste en una plataforma web que reúne la comunidad Data Science, con más de 536 mil miembros activos en 194 países. Estos datos contienen variables que describen diversos aspectos de una propiedad disponibles para alquilar en el año 2023. La base de datos abarcan un total de 2361 registros de diferentes propiedades y 45 variables que incluyen desde el precio hasta diferentes caracteristicas internas y externas de la propiedad.

Puedes encontrar el dataset en el siguiente enlace: [Precio de alquiler de casas en Montevideo Dataset](https://www.kaggle.com/datasets/lasm1984/house-rental-price-in-montevideo?select=houses.csv)

```{r}
#| echo: false
# Lectura de los datos:
# Datos sobre precio de casas
datos <- read_csv(here("houses.csv"))
datos

# Datos sobre homicidios por barrio que vamos a usar para hacer un join
datos_delitos <- read_excel(here("homicidios_dolosos_consumados.xlsx"))
datos_delitos
```

## Análisis exploratorio de los datos

Con el objetivo de responder las preguntas planteadas, en primer lugar, se realizó una limpieza de los datos. Esta limpieza incluyó la eliminación de datos duplicados,valores atípocos y valores nulos. Además, se decició eliminar las columnas "Furnished...32", "Furnished...42", y "Floors". Las dos primeras columnas fueron eliminadas porque exixtía una tercera columna que contenía la misma información. La columna "Floors" fue eliminada debido a que no contenía información relevante, tenía muchos datos faltantes y los datos presentes eran inconsistentes y poco fiables.A lo largo del análisis se fueron quitando y modificando otras variables a medida que lo veíamos necesario.

Otra modificación que se realizó fue la agrupación de las zonas de Montevideo en municipios. Cada municipio, con sus respectivas zonas se puede observar en la "Tabla 1". También se convirtió la columna precio por precio por metros cuadrados, para tener un mejor análisis de los datos.

En ciertas columnas habían valores nulos, para evitar esto se realizo lo siguiente:

-   A la columna "direccion" se le asignó el nombre de la zona a la que correspondía la propiedad.
-   A la columna "precio_m2" se calculó la media de toda la columna y se le asignó este valor a cada fila que no tenía dato.
-   A la columna "condición " se le asigno la categoria mas frcuenta y lo mismo sucedio con la columna "disposición"

```{r}
#| echo: false
tabla_municipio <- data.frame(
  Municipio = c("Municipio A","Municipio B", "Municipio C", "Municipio CH", "Municipio D", "Municipio E", "Municipio F", "Municipio G"),
  Columna2 = c("Cerro, La Teja, Paso de la Arena, Belvedere, Nuevo París, Prado",
  "Cordón, Parque Rodó, Palermo, Barrio Sur, Ciudad Vieja, Centro, Aguada, La Comercial", 
  "Aguada, Arroyo Seco, Atahualpa, Bella Vista, Brazo Oriental, Capurro, Goes, Jacinto Vera, La Comercial, Mercado Modelo, Reducto, Villa Muñoz", 
  "Tres Cruces, La Blanqueada, Parque Batlle, Villa Dolores, Buceo, Pocitos, Punta Carretas",
  "Piedras Blancas, Villa Española, Unión, Bolivar, Cerrito",
  "Malvín Norte, Malvín, Carrasco Norte, Carrasco, Punta Gorda, Buceo, La Blanqueada",
  "Maroñas, Flor de Maroñas, Villa Española, Ituzaingó, Jardines del Hipódromo, Piedras Blancas",
  "Lezica, Peñarol, Nuevo París, Sayago, Conciliación, Colón"))

tabla_municipio 

gt(tabla_municipio)

gt(tabla_municipio)
```

## Limpieza

```{r}
#| echo: false

# ORDENANDO LOS DATOS:

#Eliminando los datos atipicos

datos_2 <- datos %>% filter(Price <= 150000 & Common_Expenses <= 10000)

datos_2 <- datos_2|>
  rename(precio = Price,
         nro_de_piso = Floor,
         cant_de_piso = Number_of_Floors,
         Gastos_Comunes = Common_Expenses,
         apartamentos_por_piso = Apartments_per_Floor,
         zona = Zone,
         condicion = Condition,
         disposicion = Disposition,
         cant_cuartos = Bedrooms...18,
         cant_habitaciones = Bedrooms...13,
         año_de_const = Year_of_Construction,
         vista_al_mar = Sea_View,
         deposito = Storage,
         jardin = Garden,
         losa_radiante = Radiant_Floor_Heating,
         amueblado = Furnished...45,
         direccion = Address,
         tipo_prop = Property_Type,
         baños = Bathrooms,
         m2_const = Built_Square_Meters,
         m2_totales = Land_Square_Meters,
         m2_terraza = Terrace_Square_Meters,
         vivienda_social = Social_Housing,
         cant_de_est = Garages,
         conexion_gas = Gas_Pipeline,
         calefaccion = Heating,
         zona_barbacoa = Grill,
         balcon = Balcony
         )





# Precio por metro cuadrado

datos_2 <- datos_2 |>
  mutate(precio_m2 = ifelse(m2_const == 0, 0, precio / m2_const))

# Quitando las columnas Furnished...32, Furnished...42, y Floors

datos_2 <- 
  datos_2|>
  select(-Furnished...32, -Furnished...42, -Floors, -precio, -m2_const)

# Datos sin duplicados
datos_2 <- datos_2[!duplicated(datos_2), ]

# Cambiando la zona por municipios

datos_2 <- datos_2 %>% # Datos
  mutate(Municipio = case_when( # Casos donde a cada barrio le vamos a asociar un municipio
    
    zona %in% c("Cerro","La Teja","Paso de la Arena","Belvedere","Nuevo París","Prado")  ~ "Municipio_A",

    zona %in% c("Cordón","Parque Rodó","Palermo","Barrio Sur","Ciudad Vieja","Centro","Aguada","La Comercial") ~ "Municipio_B",

    zona %in% c("Aguada", "Arroyo Seco", "Atahualpa", "Bella Vista", "Brazo Oriental", "Capurro", "Goes", "Jacinto Vera", "La Comercial", "Mercado Modelo", "Reducto", "Villa Muñoz") ~ "Municipio_C",

    zona %in% c("Tres Cruces", "La Blanqueada", "Parque Batlle", "Villa Dolores", "Buceo", "Pocitos", "Punta Carretas") ~ "Municipio_CH",

    zona %in% c("Piedras Blancas", "Villa Española", "Unión","Bolivar","Cerrito") ~ "Municipio_D",

    zona %in% c("Malvín Norte","Malvín", "Carrasco Norte", "Carrasco", "Punta Gorda", "Buceo", "La Blanqueada") ~ "Municipio_E",

    zona %in% c("Maroñas", "Flor de Maroñas", "Villa Española", "Ituzaingó", "Jardines del Hipódromo", "Piedras Blancas") ~ "Municipio_F",

    zona %in% c("Lezica", "Peñarol", "Nuevo París", "Sayago", "Conciliación", "Colón") ~ "Municipio_G",

    TRUE ~ "Otro" # Por si hay barrios que no estén en la lista
  ))



```

Comendando la limpieza para la regresión lineal multiple:

Dado que la presencia de los valores nulos en los datos pueden afectar negativamente el ajuste y la precisión lineal múltiple, se realizaron varios pasos de limpieza de datos para manejar estos valores faltantes de manera mas adecuada. A continuación, se decriben los métodos utilizados para las diferentes columnas que contiene valores nulos en nuestro conjunto de datos,como se menciono anteriormente, en la columna de "precio_m2" se calculó la media de toda la columna y se le asignó este valor a cada fila que no tenía dato, en la columna "direccion" se le asignó el nombre de la zona a la que correspondía la propiedad y por último la columna "condición " se le asigno la categoria mas frcuenta y lo mismo sucedio con la columna "disposición"

```{r}
#| echo: false
# Convertir columnas categóricas a factores si es necesario
datos_2$tipo_prop <- as.factor(datos_2$tipo_prop)
datos_2$zona <- as.factor(datos_2$zona)
datos_2$condicion <- as.factor(datos_2$condicion)
datos_2$disposicion <- as.factor(datos_2$disposicion)
datos_2$vista_al_mar <- as.factor(datos_2$vista_al_mar)
datos_2$vivienda_social <- as.factor(datos_2$vivienda_social)
datos_2$Barbecue <- as.factor(datos_2$Barbecue)
datos_2$Living_Room <- as.factor(datos_2$Living_Room)
datos_2$Closet <- as.factor(datos_2$Closet)
datos_2$Patio <- as.factor(datos_2$Patio)
datos_2$Pool <- as.factor(datos_2$Pool)
datos_2$Garage <- as.factor(datos_2$Garage)
datos_2$Pet <- as.factor(datos_2$Pet)
datos_2$conexion_gas <- as.factor(datos_2$conexion_gas)
datos_2$Playroom <- as.factor(datos_2$Playroom)
datos_2$Duplex <- as.factor(datos_2$Duplex)
datos_2$calefaccion <- as.factor(datos_2$calefaccion)
datos_2$WiFi <- as.factor(datos_2$WiFi)
datos_2$Gym <- as.factor(datos_2$Gym)
datos_2$balcon <- as.factor(datos_2$balcon)
datos_2$Air_Conditioning <- as.factor(datos_2$Air_Conditioning)
datos_2$jardin <- as.factor(datos_2$jardin)
datos_2$losa_radiante <- as.factor(datos_2$losa_radiante)
datos_2$Solarium <- as.factor(datos_2$Solarium)
datos_2$amueblado <- as.factor(datos_2$amueblado)
datos_2$zona_barbacoa <- as.factor(datos_2$zona_barbacoa)
datos_2$deposito <- as.factor(datos_2$deposito)
datos_2$baños <- as.factor(datos_2$baños)
names(datos_2)
```

```{r}
#| echo: false
# Función para reemplazar valores NA en 'direccion' con los valores de 'zona'
reemplazar_direccion <- function(datos_2) {
  if (!"direccion" %in% colnames(datos_2) || !"zona" %in% colnames(datos_2)) {
    stop("Las columnas 'direccion' y 'zona' deben estar presentes en los datos.")
  }
  datos_2$direccion <- ifelse(is.na(datos_2$direccion), datos_2$zona, datos_2$direccion)
  return(datos_2)
}
datos_2 <- reemplazar_direccion(datos_2)


# Función para rellenar valores NA en 'precio_m2' con la media de los valores existentes
rellenar_na_precio_m2 <- function(datos_2) {
  # Verificar si la columna 'precio_m2' existe
  if (!"precio_m2" %in% colnames(datos_2)) {
    stop("La columna 'precio_m2' no está presente en los datos.")
  }
media_precio_m2 <- mean(datos_2$precio_m2, na.rm = TRUE)
  datos_2$precio_m2[is.na(datos_2$precio_m2)] <- media_precio_m2
  return(datos_2)
}

datos_2 <- rellenar_na_precio_m2(datos_2)


nombre_1 <- names(sort(table(datos_2$condicion), decreasing = TRUE)[1])
datos_2$condicion[datos_2$condicion %in% NA] <- nombre_1


nombre_2 <- names(sort(table(datos_2$disposicion), decreasing = TRUE)[1])
datos_2$disposicion[datos_2$disposicion %in% NA] <- nombre_2

detector_nulos <- function(datos_2){ # Función
  data_nulos <- data.frame(cantidad_nulos = sapply(datos_2, function(x) sum(is.na(x)))) 
  # Aplicamos la función sapply par ver sumar la cantidad total de nulos en las los datos y a este objeto lo guardamos como un dataframe
  
  resultado <- data_nulos %>% filter(cantidad_nulos > 0)
  return(resultado)
  # De este DataFrame filtramos solo las columnas que tengan una cantidad total de valores nulos mayor a 0
}

detector_nulos(datos_2)
datos_2$año_de_const
```

## Visualización

```{r}
#| echo: false
# Pregunta 1) ¿Cambia el precio con respecto al barrio en que se ecuestre la propiedad?


# Elegimos los colores manualmente
colores_personalizados <- c(
  "Municipio_A" = "red",  "Municipio_B" = "blue",  "Municipio_C" = "green",                   "Municipio_CH" = "purple",  "Municipio_D" = "orange",   "Municipio_E" = "pink",
  "Municipio_F" = "brown",  "Municipio_G" = "cyan")


# Gráfico
ggplot(datos_2, aes(x = zona, y = precio_m2, fill = Municipio)) +  # Datos, ejes y color
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +
  # Ancho y posición de las barras

  facet_grid(. ~ Municipio, scales = "free_x") +
  # Usar facet_grid para crear una grilla por Municipio

  labs(x = "Zona", y = "Precio por m^2", fill = "Municipio") + # Etiquetas de los ejes y la leyenda
  ggtitle("Precio por Zona y Municipio") + # Título
  scale_fill_manual(values = colores_personalizados) + # Cambiar la paleta de colores

  theme(plot.title = element_text(hjust = 0.5), # Centrar el título
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Centrar el título y modificar el texto de los elementos del eje X
```

En este gráfico se puede observar que los municipios B, CH y E tienen los precios por metro cuadrado más altos. Dentro del municipio B, la zona con el precio por metro cuadrado más elevado es Centro. En el municipio CH, la zona más costosa es Pocitos, mientras que en el municipio E, la zona con el mayor precio por metro cuadrado es Carrasco.

```{r}
#| echo: false
# Pregunta 3) Qué tipo de inmuebles para alquilar hay?


grupo_tipo <- datos_2 %>% # Datos
  group_by(tipo_prop) %>% # Agrupar por tipo de propiedad
  summarise(Cantidad = n()) # Resumir por cantidad 
grupo_tipo


# Gráfico
ggplot(grupo_tipo, aes(x=fct_reorder(tipo_prop, Cantidad), y=Cantidad)) + # Datos y ejes
  geom_bar(stat="identity") + # Gráfico de barras
  labs(x="Municipio") + # Nombres de los ejes
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size=8))
# Cambiar el ángulo y el tamaño del texto de los elementos del eje X
```

```{r}
#| echo: false
grupo_estado <- datos_2 %>% # Datos
  group_by(condicion) %>%   # Agrupar por condición de la vivienda
  summarise(Cantidad = n()) # Resumir por la cantidad
grupo_estado


# Gráfico
ggplot(grupo_estado, aes(x=fct_reorder(condicion, Cantidad), y=Cantidad)) + # Datos y ejes
  geom_bar(stat="identity") + # Gráfico de barras
  labs(x="Municipio", y="Precio") + # Nombre de los ejes
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size=8))
# Cambiar el ángulo y el tamaño del texto de los elementos del eje X
```

Al analizar los dos gráficos anteriores, se destaca que la mayoría de los alquileres corresponden a apartamentos, mientras que las propiedades de tierra, negocios especiales, edificios o garajes son menos comunes. Esta tendencia sugiere una alta disponibilidad de apartamentos en Montevideo, lo cual representa una oportunidad licrativa para los inversionistas.

Al considerar el primer gráfico, que muestra que la mayoría de las propiedades están en buenas o excelentes condiciones, los potenciales inquilinos se beneficiarían al evitar la necesidad de realizar modificaciones significativas en las propiedades disponibles para alquilar.

```{r}
# Gráfico
ggplot(datos_2, aes(x = fct_infreq(tipo_prop), y = precio_m2, fill = Municipio)) + # Datos, ejes y color
  geom_bar(stat = "identity", position = "dodge", width = 0.7) + # Ajustar el ancho de las barras
  facet_grid(. ~ Municipio, scales = "free_x") + # Usar facet_grid para crear una grilla por Municipio
  labs(x = "Zona", y = "Precio", fill = "Municipio") + # Etiquetas de los ejes y la leyenda
  ggtitle("Tipo de alquiler por municipio") + # Título del gráfico
  scale_fill_manual(values = colores_personalizados) + # Cambiar la paleta de colores
  theme(plot.title = element_text(hjust = 0.5), # Centrar el título
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Cambiar el ángulo y el tamaño del texto de los elementos del eje X
```

En este gráfico trata de explicar que tipo de propiedad se alquila en cada municipio. En los municipios A, CH, es mas comun alquilar apartamentos aunque tambien se alquilan otro tipo de propiedades. En contraste, en el municipio B y otros municipios, predominan las oficinas. Esto sugiere que el tipo de propiedad alquilada varía según el municipio.

Aunque el gráfico anterior indicaba que los apartamentos eran el tipo de propiedad más común en general, esta tendencia puede estar influenciada por datos específicos, como los del Prado, que podrían distorsionar los resultados generales

```{r, echo: false}
# Gráfico 1: Conteo por Municipio
grafico1 <- ggplot(datos_2, aes(x = Municipio)) + 
  geom_bar() + 
  scale_x_discrete(breaks = unique(datos_2$Municipio)) +
  labs(title = "Cantidad de alquileres por municipio") + 
    theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))

  

# Gráfico 2: Grupo de Precio por metro cuadrado por municipio
grupo_municipio <- datos_2 %>% 
  group_by(Municipio) %>% 
  summarise(Cantidad = mean(precio_m2))

# Gráfico de Precio por metro cuadrado por municipio
grafico2 <- ggplot(grupo_municipio, aes(x = fct_reorder(Municipio, Cantidad), y = Cantidad)) + 
  geom_bar(stat = "identity") + 
  labs(x = "Municipio", y = "Precio promedio") + 
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))


# Gráfico 2: Conteo de Disposición
grafico7 <- ggplot(datos_2, aes(x = disposicion)) + 
  geom_bar() + 
  #scale_x_discrete(breaks = unique(datos$disposicion)) +
  labs(title = "Distribución de disposición") +
    theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))

  


# Gráfico Grupo de Precio precio por metro cuadrado por disposición
grupo_disposicion <- datos_2 %>% 
  group_by(disposicion) %>% 
  summarise(Cantidad = precio_m2)


# Gráfico de Precio precio por metro cuadrado por disposición
grafico8 <- ggplot(grupo_disposicion, aes(x = fct_reorder(disposicion, Cantidad), y = Cantidad)) + 
  geom_bar(stat = "identity") + 
  labs(x = "Disposición", y = "Precio promedio") + 
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))




# Grilla
grid.arrange(grafico1, grafico2, grafico7, grafico8, ncol = 2, nrow = 2)

```

Al analizar la distribución de alquileres, observamos que la mayoria de los propiedades a alquilar se encuentram en el municipio CH. En contraste, el municipio F presenta la menor cantidad de alquileres.

En terminos de precios por metro cuadrado de alquiler, identificamos que el municipio F, ofrece las tarifas mas bajas, mientras que el municipio CH se destaca por tener los precios más altos.

En cuanto a la disposición de las propiedades, la mayoría de las propiedades en alquiler están sutuadas al frente. Al analizar los precios por metro cuadrado relacionados con la disposición de las propiedades, encontramos que la mayoría tienen un precio diferente. Las propiedades que esta situadas al fente su precio por metro cuadrado es superior a los 7500 dolares mientras que los que estan en el interior y "side" su precio es inferior a lps 2500 dolares por metro cuadrado.



### NUEVOS GRÁFICOS DE VISUALIZACIÓN:



Pregunta 1) ¿Cómo se distribuyen los municipios y el precio promedio de alquiler por municipio? ¿Cómo se distribuyen la disposición de los alquileres y el precio promedio según la disposición de los alquileres?
```{r}


# Gráfico 1: Conteo por Municipio
grafico1 <- ggplot(datos_2, aes(x = Municipio)) +
  geom_bar() +
  scale_x_discrete(breaks = unique(datos_2$Municipio)) +
  labs(title = "Cantidad de alquileres por municipio") +
    theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))



# Gráfico 2: Grupo de Precio promedio por municipio
grupo_municipio <- datos_2 %>%
  group_by(Municipio) %>%
  summarise(Cantidad = mean(precio_m2))

# Gráfico de Precio promedio por municipio
grafico2 <- ggplot(grupo_municipio, aes(x = fct_reorder(Municipio, Cantidad), y = Cantidad)) +
  geom_bar(stat = "identity") +
  labs(x = "Municipio", y = "Precio promedio") +
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))







# Gráfico 2: Conteo de Disposición
grafico7 <- ggplot(datos_2, aes(x = disposicion)) +
  geom_bar() +
  scale_x_discrete(breaks = unique(datos_2$disposicion)) +
  labs(title = "Distribución de disposición") +
    theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))




# Gráfico Grupo de Precio promedio por disposición
grupo_disposicion <- datos_2 %>%
  group_by(disposicion) %>%
  summarise(Cantidad = mean(precio_m2))


# Gráfico de Precio promedio por disposición
grafico8 <- ggplot(grupo_disposicion, aes(x = fct_reorder(disposicion, Cantidad), y = Cantidad)) +
  geom_bar(stat = "identity") +
  labs(x = "Disposición", y = "Precio promedio") +
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))




# Grilla
grid.arrange(grafico1, grafico2, grafico7, grafico8, ncol = 2, nrow = 2)


``` 

En este gráfico se puede observar que la mayoría de los alquileres se encuentran en el municipio CH, B y E. Pero en relación al precio por promedio por metro cuadrado, los alquileres más caros se encuentran en el municipio A, donde hay pocos alquileres en general. Luego los siguientes alquileres más caros se encuentran en el municipio E y CH.


Luego en la disposición vemos que los más común son los inmuebles al frente, y vemos que en relación al precio por metro cuadrado, todos tienen un precio similar, que va ascendiendo desde Frente, Atrás, Interior y Costado, pero recordamos que estos incrementos son pequeños en relación al precio promedio por metro cuadrado.




Pregunta 2) ¿Cómo se distribuye el tipo de propiedad de los alquileres y el precio promedio de el tipo de propiedad? ¿¿Cómo se distribuye las condiciones de los alquileres y el precio promedio según las condiciones de los alquileres?

```{r}

# Gráfico 3: Tipo de propiedad
grafico3 <- ggplot(datos_2, aes(x = tipo_prop)) +
  geom_bar() +
  scale_x_discrete(breaks = unique(datos_2$tipo_prop)) +
  labs(title = "Distribución de tipos de propiedad") +
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))


# Grupo de Precio promedio por tipo de propiedad
grupo_tipo <- datos_2 %>%
  group_by(tipo_prop) %>%
  summarise(Cantidad = mean(precio_m2))


# Gráfico de Precio promedio por tipo de propiedad
grafico4 <- ggplot(grupo_tipo, aes(x = fct_reorder(tipo_prop, Cantidad), y = Cantidad)) +
  geom_bar(stat = "identity") +
  labs(x = "Tipo de Propiedad", y = "Precio promedio") +
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))




# Gráfico 4: Condición de la vivienda
grafico5 <- ggplot(datos_2, aes(x = condicion)) +
  geom_bar() +
  scale_x_discrete(breaks = unique(datos_2$condicion)) +
  labs(title = "Distribución de condición de la vivienda") +
   theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))


# Grupo de Precio promedio por condición de la vivienda
grupo_condicion <- datos_2 %>%
  group_by(condicion) %>%
  summarise(Cantidad = mean(precio_m2))


# Gráfico de Precio promedio por condición de la vivienda
grafico6 <- ggplot(grupo_condicion, aes(x = fct_reorder(condicion, Cantidad), y = Cantidad)) +
  geom_bar(stat = "identity") +
  labs(x = "Condición", y = "Precio promedio") +
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 6))



# Crear la grilla de gráficos
grid.arrange(grafico3, grafico4, grafico5, grafico6, ncol = 2, nrow = 2)
``` 

En los tipos de propiedad, mayoritariamente son apartamentos, en relación al precio promedio por metro cuadrado vemos que los más caros son las oficinas seguidos por los apartamentos y luego por las casas.

Luego cuando nos referimos a la condición de las alquileres, vemos que la mayoría se encuentra en Excelente Condición o en Buena Condición, también una cantidad considerable esta recientemente construdido. En relación al precio promedio por metro cuadrado, vemos que los alquileres "En Construccion", "Para Estrenar" y en Excelente Condición son los más caros.






Pregunta 3) ¿Cambia el precio con respecto al municipio en que se ecuestre la propiedad
```{r}
datos_2 <- datos_2 %>% filter(precio_m2 < 400)



# Elegimos los colores manualmente
colores_personalizados <- c(
  "Municipio_A" = "red",  "Municipio_B" = "blue",  "Municipio_C" = "green",                   "Municipio_CH" = "purple",  "Municipio_D" = "orange",   "Municipio_E" = "pink",
  "Municipio_F" = "brown",  "Municipio_G" = "cyan")





# Gráfico
ggplot(datos_2, aes(x = zona, y = precio_m2, fill = Municipio)) +  # Datos, ejes y color
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +
  # Ancho y posición de las barras

  facet_grid(. ~ Municipio, scales = "free_x") +
  # Usar facet_grid para crear una grilla por Municipio

  labs(x = "Zona", y = "Precio", fill = "Municipio") + # Etiquetas de los ejes y la leyenda
  ggtitle("Precio por Zona y Municipio") + # Título
  scale_fill_manual(values = colores_personalizados) + # Cambiar la paleta de colores

  theme(plot.title = element_text(hjust = 0.5), # Centrar el título
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Centrar el título y modificar el texto de los elementos del eje X


# Filtro para quitar los outliers


``` 
La respuesta es que si, los barrios ubicados en el municipio E, B y CH son los que tienen el precio promedio por metro cuadrado más alto. Dentro del municipio E el barrio más caro es Carrasco, dentro del municipio B el barrio más caro es Centro, dentro del municipio CH el barrio más caro es Pocitos.






Pregunta 4) ¿Cómo se distribuyen los tipos de inmuebles por municipio?

```{r}

# Gráfico
ggplot(datos_2, aes(x = tipo_prop, y = precio_m2, fill = Municipio)) + # Datos, ejes y color
  geom_bar(stat = "identity", position = "dodge", width = 0.7) + # Ajustar el ancho de las barras
  facet_grid(. ~ Municipio, scales = "free_x") + # Usar facet_grid para crear una grilla por Municipio
  labs(x = "Zona", y = "Precio", fill = "Municipio") + # Etiquetas de los ejes y la leyenda
  ggtitle("Tipo de alquiler por municipio") + # Título del gráfico
  scale_fill_manual(values = colores_personalizados) + # Cambiar la paleta de colores
  theme(plot.title = element_text(hjust = 0.5), # Centrar el título
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Cambiar el ángulo y el tamaño del texto de los elementos del eje X

```

En general el tipo de alquiler más común varia según municipio, en los municipios A, C, D y G son más comunes los alquileres de Alquileres. En cambio en los municipios CH y E son más comunes los alquileres de casas, finalmente en el municipio B es más común el alquiler de Oficinas.

La mayoría de los alquileres se encuentran en Buena Condición o el Excelente Condición. También hay una parte considerable de alquileres que son nuevos.

La mayoría de los inmuebles estan en buena condición o excelente condición. Pocos de ellos estan en construcción, o con necesidad de mantenimiento o por ser renovados



Pregunta 5) ¿Cómo se distribuyen las condiciones de las viviendas por municipio?

```{r}
 

# Gráfico
ggplot(datos_2, aes(x = condicion, y = precio_m2, fill = Municipio)) + # Datos, ejes y color
  geom_bar(stat = "identity", position = "dodge", width = 0.7) + # Ajustar el ancho de las barras
  facet_grid(. ~ Municipio, scales = "free_x") + # Usar facet_grid para crear una grilla por Municipio
  labs(x = "Zona", y = "Precio", fill = "Municipio") + # Etiquetas de los ejes y la leyenda
  ggtitle("Condición de la vivienda por Municipio") + # Título del gráfico
  scale_fill_manual(values = colores_personalizados) + # Cambiar la paleta de colores
  theme(plot.title = element_text(hjust = 0.5), # Centrar el título
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Cambiar el ángulo y el tamaño del texto de los elementos del eje X




``` 

En el Municipio A y E estan predominantemente los apartamentos en Excelente Condición. En los municipios C y F es más común los apartamentos con Buena Condición. n los municipios CH y B hay un empate entre la cantidad de apartamentos con Excelente Condición y Buena Condición.




Pregunta 6) ¿Cómo se distribuyen los gastos comunes en relación al municipio, el tipo de propiedad y la condición de la propiedad?
```{r}

# Gráfico 1: Municipio y Gastos Comunes
grafico9 <- ggplot(datos_2, aes(x = Municipio, y = Gastos_Comunes)) + 
  geom_bar(stat = "identity") + 
  theme(axis.text.x = element_text(size = 6)) +
  labs(title = "Gastos Comunes por Municipio")

# Gráfico 2: Tipo de propiedad y Gastos Comunes
grafico10 <- ggplot(datos_2, aes(x = tipo_prop, y = Gastos_Comunes)) +
  geom_bar(stat = "identity") + 
  theme(axis.text.x = element_text(size = 6)) +
  labs(title = "Gastos Comunes por Tipo de Propiedad")

# Gráfico 3: Condición y Gastos Comunes
grafico11 <- ggplot(datos_2, aes(x = condicion, y = Gastos_Comunes)) +
  geom_bar(stat = "identity") + 
  theme(axis.text.x = element_text(size = 6)) +
  labs(title = "Gastos Comunes por Condición")

# Crear la grilla de gráficos
grid.arrange(grafico9, grafico10, grafico11, ncol = 1, nrow = 3)

``` 

La mayoría de gastos comúnes se dan en el municipio CH, donde recordemos estan la mayoría de los alquileres, y la minoría de gastos comunes se dan en el municipio F donde recordemos hay la menor cantidad de alquileres.

La mayoría de gastos comúnes se dan en los apartamentos, y muy pocos en las Oficinas. En los otros tipos de alquileres practicamente no existen gastos comunes.

En los alquileres que estan en Excelentes Condiciones los gastos comunes son más altos, similarmente ocurre con los que estan en Buena Condición. A mejor condición del alquiler, más altos seran los gastos comunes.








Pregunta 7) ¿Cómo influye la condición de el alquiler en el nivel de gastos comunes?

```{r}

#
datos <- datos %>% filter()

max(datos$precio)
ggplot(datos_2, aes(x = tipo_prop, y = Gastos_Comunes, fill = Municipio)) + # Datos, ejes y municipio
  geom_bar(stat = "identity", position = "dodge", width = 0.7) + # Ajustar el ancho de las barras
  facet_grid(. ~ Municipio, scales = "free_x") + # Usar facet_grid para crear una grilla por Municipio
  labs(x = "Zona", y = "Precio", fill = "Municipio") + # Etiquetas de los ejes y la leyenda
  ggtitle("Gastos Comunes según tipo de alquiler por Municipio") + # Título del gráfico
  scale_fill_manual(values = colores_personalizados) + # Cambiar la paleta de colores
  theme(plot.title = element_text(hjust = 0.5), # Centrar el título
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Cambiar el ángulo y el tamaño del texto de los elementos del eje X


``` 

Como mencionamos anteriormente, en todos los municipios se cumple el mismo patrón, que es que los Gastos Comunes se dan más en alquileres del tipo apartamento.






Pregunta 8) ¿Cómo se distribuyen los Gastos Comunes en relación a la condición del alquiler por Municipio?

```{r, echo: false}


# 


ggplot(datos_2, aes(x = condicion, y = Gastos_Comunes, fill = Municipio)) + # Datos, ejes y color
  geom_bar(stat = "identity", position = "dodge", width = 0.7) + # Ajustar el ancho de las barras
  facet_grid(. ~ Municipio, scales = "free_x") + # Usar facet_grid para crear una grilla por Municipio
  labs(x = "Zona", y = "Precio", fill = "Municipio") + # Etiquetas de los ejes y la leyenda
  ggtitle("Gastos Comunes según el tipo de alquiler por Municipio") + # Título del gráfico
  scale_fill_manual(values = colores_personalizados) + # Cambiar la paleta de colores
  theme(plot.title = element_text(hjust = 0.5), # Centrar el título
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Cambiar el ángulo y el tamaño del texto de los elementos del eje X




```

En el municipio A los gastos comunes se dan más en los inmuebles que estan en Buena Condición.

En el municipio B y C los gastos comunes se da más en los inmuebles que estan en Excelente Condición.

En el municipio CH hay un empate entre los más comunes son la Excelente Condición y Renovados.

En el municipio E hay un empate entre los más comunes son la Excelente Condición y Buena Condición.







Pregunta 9) Cómo influye tener o no ciertas caracteristicas en el alquiler (como son wifi, una barbacoa o un jardin) en el precio con respecto a los alquileres que no lo tienen?

```{r, echo: false}



# # Obtenemos las columnas que tienen valores entre 0 y 1
#datos_2
dum <- datos_2 %>%
select("vista_al_mar","vivienda_social","Barbecue","Living_Room","Closet","Patio","Pool","Garage","Pet","conexion_gas","Playroom","Duplex","calefaccion","WiFi","zona_barbacoa","Gym","balcon","deposito","Air_Conditioning","jardin","losa_radiante","Solarium","amueblado")




# Función para crear el dataframe que tiene 0 y 1 en sus filas, las variables en sus columnas y el promedio de precio en cada celda.

calcular_y_unir <- function(df, col, resultado_final) { # Función
  temp <- df %>%       # Datos
    group_by(valor = .data[[col]]) %>% # Agrupamos por todas las columnas
    summarise(Mean = mean(precio_m2, na.rm = TRUE), .groups = "drop")
  # Resumimos con la media, ignorando los nulos

  colnames(temp)[2] <- paste0(col, "_Media") # A cada columna del dataframe resultante le vamos a pegar la palabra "_Mean"
  resultado_final <- left_join(resultado_final, temp, by = "valor", relationship = "many-to-one") # Hacemos un join con todos los resultados, teniendo la columna "valor" como columna común entre las tablas para unirlas
  return(resultado_final) # Resultado
}



# DataFrame inicial
resultado_final <- data.frame(valor = c(0, 1))


# Obtenemos las columnas del dataframe dum
columnas <- colnames(dum)



# Aplicar la función creada a cada columna
for (col in columnas) { # Para cada columna
  resultado_final <- calcular_y_unir(datos_2, col, resultado_final)
} # Aplicamos la función


# DataFrame resultante
resultado_final



# CUIDADO: Este código da error cuando convierto las columnas a factores como hace el código que esta arriba que sirve para el modelo lineal, puedo pensar este código distinto, o ese código que convierte a factor ponerlo abajo cuando empezemos el modelo lineal
```

```{r, echo: false}


#
# Función para gráficar 
funcion_dum <- function(datos){

# Pasamos los datos al formato largo con pivot_longer
  data_long <- resultado_final %>%
    pivot_longer(-valor, names_to = "variable", values_to = "value")

  # Gráfico
  ggplot(data_long, aes(x = variable, y = value, fill = as.factor(valor))) + # Datos, ejes y color
    geom_bar(stat = "identity", position = position_dodge(width = 0.5)) +  # Gráfico de barras, con barras superpuestas
    labs(x = "Variable", y = "Value", fill = "Value") + # Nombre de los ejes
    theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Cambiar ángulo y tamaño del texto de los elementos del eje X
  
}


# Resultados
funcion_dum(resultado_final)



```

En este gráfico mostramos distintas variables que representan elementos de confort que puede tener un alquiler o no tener, como son WiFi, Barbacoa, Jardin, Aire Acondicionado, etc. Estas variables toman valores de 0 y 1 donde el 0 representa que el alquiler no posee ese bien y el 1 representa que el alquiler si posee ese bien. Estamos gráficando el precio promedio para cada una de esas variables y comparando como difiere el precio en caso de tener o no tener un bien. Vemos que en bienes como lo son: Aire Acondicionado, Amueblamiento, Barbacoa, Calefacción, Closet, Deposito, Garage, Jardin, Living, Losa Radiante, Patio, Habitación de juegos, Piscina, Vista al Mar y Barbacoa, el precio es más alto al tener que al no tener. En cambio, en el caso de Balcon, Conexión a Gas, Duplex, Gimansio, Equipo para mascotas, Centro de Bronceado, WiFi o en el caso de ser una vivienda social, el precio es más alto al no tener que al tener.









Pregunta 10) ¿Cómo influyen elementos relativos a los pisos como son el número de pisos, la cantidad de apartamentos en un piso o la cantidad de pisos en todo el edificio del inmueble al precio de alquiler?

```{r, echo: false}



# Filtro:
datos <- datos %>% filter( (cant_de_piso < 20 & cant_de_piso > 0) & (apartamentos_por_piso < 14 & apartamentos_por_piso > 0) & (nro_de_piso < 44) )




```

Pregunta 11) ¿Cómo cambia el precio según la cantidad de pisos que tiene el inmueble?

```{r, echo: false}

# 


# GRUPOS
grupo_piso_1 <- datos_2 %>% # Datos
  group_by(cant_de_piso) %>% # Agrupados por cantidad de pisos
  summarise(media_precio = mean(precio_m2)) # Resumidos por cantidad
#grupo_piso_1


grupo_piso_2 <- datos_2 %>% # Datos
   group_by(nro_de_piso) %>% #Agrupados por número de piso
   summarise(media_precio = mean(precio_m2)) # Resumidos por media con respecto al precio
#grupo_piso_2


grupo_piso_3 <- datos_2 %>%   # Datos
  group_by(apartamentos_por_piso) %>% # Agrupados por pisos por apartamentos
  summarise(media_precio = mean(precio_m2)) # Resumido por cantidad
#grupo_piso_3





# Gráfico 1: Cantidad de pisos
grafico12 <- ggplot(datos_2, aes(x = cant_de_piso)) +  
  geom_bar() +
  scale_x_continuous(breaks = unique(datos_2$cant_de_piso)) +
  labs(title = "Cantidad de pisos")



# Gráfico 2: Precio promedio por cantidad de pisos
grafico13 <- ggplot(grupo_piso_1, aes(x = cant_de_piso, y = media_precio)) +  
  geom_bar(stat = "identity") + 
  scale_x_continuous(breaks = unique(grupo_piso_1$cant_de_piso)) +
  labs(title = "Precio promedio por cantidad de pisos")



# Gráfico 3: Número de piso
grafico14 <- ggplot(datos_2, aes(x = nro_de_piso)) +  
  geom_bar() +
  scale_x_continuous(breaks = unique(datos_2$nro_de_piso)) +
  labs(title = "Número de piso")

# Gráfico 4: Precio promedio por número de piso
grafico15 <- ggplot(grupo_piso_2, aes(x = nro_de_piso, y = media_precio)) +  
  geom_bar(stat = "identity") + 
  scale_x_continuous(breaks = unique(grupo_piso_2$nro_de_piso)) +
  labs(title = "Precio promedio por número de piso")



# Gráfico 5: Apartamentos por piso
grafico16 <- ggplot(datos_2, aes(x = apartamentos_por_piso)) + 
  geom_bar() +
  scale_x_continuous(breaks = unique(datos_2$apartamentos_por_piso)) +
  labs(title = "Apartamentos por piso")

# Gráfico 6: Cantidad de apartamentos por piso
grafico17 <- ggplot(grupo_piso_3, aes(x = apartamentos_por_piso, y = media_precio)) +  
  geom_bar(stat = "identity") + 
  scale_x_continuous(breaks = unique(grupo_piso_3$apartamentos_por_piso)) +
  labs(title = "Cantidad de apartamentos por piso")




# Panel 2x3
grid.arrange(grafico12, grafico13, grafico14, grafico15, grafico16, grafico17, ncol = 2, nrow = 3)

# Hacer el filtro que nos recomendo la profe con los factores para que se vea mejor y no perder datos.
```

Vemos que los inmuebles en general tienen una distribución similar según su cantidad de pisos, excepto en el caso de los inmuebles con 10 pisos que tienen una ocurrencia mucho más alta. En relación, vemos que en general la mayoría se mantiene en los 1000 dolares para cantidades de pisos variadas, y en algunas cantidades de pisos como son 2, 12, 13 la media del precio esta cerca de los 2000 dolares.

En la distribución los números de piso 0 y 1, luego cuando los pisos van subiendo de número la frecuencia va disminuyendo (con algunas excepciones como son el número 4 y el 9). En relación al precio vemos que casi todos los números de piso tiene un precio similar (casi 1000\$) pero particularmente el piso con número 11 tiene un precio más elevado.

La distribución de la cantidad muestra que en un piso en general es más común encontrarse con 2, 3 o 4 apartamentos. En relación al precio vemos que esos pisos que tienen 2, 3 o 4 apartamentos también son los que tienen el precio más alto.

Pregunta 12) ¿Cómo afecta al inmueble el tener cierta cantidad de comodidades como son Baños, Garages, Cuartos y Habitaciones en el precio?

```{r, echo: false}

# PRECIO SEGÚN CANTIDAD DE COMODIDADES como son Garages, Habitaciones, Cuartos, Baños 





Grupo_Baños <- datos_2 %>%         # Datos
   group_by(baños) %>%  # Agrupado por cantidad de garages
   summarise(media_precio = mean(precio_m2)) # Resumido por media del precio



grupo_cant_habit <- datos_2 %>%         # Datos
   group_by(cant_habitaciones) %>%  # Agrupado por cantidad de garages
   summarise(media_precio = mean(precio_m2)) # Resumido por media del precio



grupo_cant_cuartos <- datos_2 %>%  # Datos 
   group_by(cant_cuartos) %>% # Agrupado por cantidad de cuartos
   summarise(media_precio = mean(precio_m2)) # Resumido por la media del precio



grupo_garage <- datos_2 %>%         # Datos
   group_by(cant_de_est) %>%  # Agrupado por cantidad de garages
   summarise(media_precio = mean(precio_m2)) # Resumido por media del precio













# GRÁFICOS
grafico18 <- ggplot(datos_2, aes(x=baños)) + 
  geom_bar() + 
  scale_x_continuous(breaks =  Grupo_Baños$baños)


grafico19 <- ggplot(Grupo_Baños, aes(x=baños, y=media_precio)) + 
  geom_bar(stat="identity") +  
  scale_x_continuous(breaks =  Grupo_Baños$baños)





grafico20 <- ggplot(datos_2, aes(x=cant_habitaciones)) + 
  geom_bar() +  
  scale_x_continuous(breaks =  grupo_cant_habit$cant_habitaciones)


grafico21 <- ggplot(grupo_cant_habit, aes(x=cant_habitaciones, y=media_precio)) +  
  geom_bar(stat="identity") +  
  scale_x_continuous(breaks =  grupo_cant_habit$cant_habitaciones)






grafico22 <- ggplot(datos_2, aes(x=cant_cuartos)) + 
  geom_bar() +   
  scale_x_continuous(breaks =  grupo_cant_cuartos$cant_cuartos)


grafico23 <- ggplot(grupo_cant_cuartos, aes(x=cant_cuartos, y=media_precio)) +  
  geom_bar(stat="identity") +   
  scale_x_continuous(breaks =  grupo_cant_cuartos$cant_cuartos)






grafico24 <- ggplot(datos_2, aes(x=cant_de_est)) + 
  geom_bar() +  
  scale_x_continuous(breaks =  grupo_garage$cant_de_est)
#

grafico25 <- ggplot(grupo_garage, aes(x=cant_de_est, y=media_precio)) +  
  geom_bar(stat="identity") +   
  scale_x_continuous(breaks =  grupo_garage$cant_de_est)




# Panel 2x4 (dos columnas, 4 filas para 8 gráficos)
grid.arrange(grafico18, grafico19, grafico20, grafico21, grafico22, grafico23, grafico24, grafico25, ncol = 2, nrow=4)


```

En relación a los baños lo más común es que los inmuebles tengan un baño, luego el tener 2 o 3 es menos común. Similarmente ocurre con la cantidad de estacionamientos (garages) donde lo más común es el que el inmueble tenga un garage o ninguno. En relación al número de cuartos y de habitaciones el patrón que se repite es tener 2 o 3 en el caso de habitaciones y 1 o 2 en el caso de cuartos. Pero vemos que siempre para todos estos elementos, se cumple la relación intuitiva de que a más número de baños, estacionamientos, habitaciones o cuartos, el precio del inmueble es más elevado.




```{r}


``` 


```{r}


``` 



```{r}


``` 



```{r}


``` 



```{r}


``` 






## Modelo Predictivo

**Análisis Exploratorio para Determinar las variables que más Influyen en el Precio por metro cuadrado:**

Se realizará un análisis exploratorio con el objetivo de identificar las variables que tienen mayor impacto en el precio por metro cuadrado. Para ello, se elaboraron graficos lineales que comparan distintas variables con el precio por metro cuadrado, permitiendo observar cómo cada una de estas variables afecta el precio de manera específica. Este análisis se ha realizado con casi todas las variables disponibles en los datos, sin embargo, en el informe solo se presentan algunos de los resultados más relevenates.

El gráfico a continuación muestra como afecta la contidad de baños en el precio por metro cuadrado.Se observa que las propiedades con 1 y 2 baños tienen un precio por metro cuadrado mayor al resto de las propiedades. Esto significa que la cantidad de baños no influye demaciado en la determinacion de precios de una propiedad.

Además, se decicio categorizar las propiedades en cuatro grupos según la coantidad de baños: propiedades con 1 baño, 2 baños, 3 baños y más de 3 baños.Para asi de esta manera poder tener un mejor manejo de los datos.

```{r}
datos_2 <- datos_2 %>%
  mutate(baños = case_when(
    baños == 0 ~ "0",
    baños == 1 ~ "1",
    baños == 2 ~ "2",
    baños == 3 ~ "3",
    TRUE ~ "mas de 3"
  ))

promedios1 <- datos_2 %>%
  group_by(baños) %>%
  summarise(promedio_precio_m2 = mean(precio_m2, na.rm = TRUE))


ggplot(promedios1, aes(x = baños, y = promedio_precio_m2)) +
  geom_bar(stat = "identity") +
  labs(x = "Baños", y = "Precio por m2") +
  ggtitle("Precio por m2 según número de baños") +
  theme_minimal()
```

Se aplicó el mismo proceso de categorización utilizado para los baños a las propiedades en función de la cantidad de estacionamientos. En este caso, que la propiedad tenga o no tenga estacionamiento no afecta de gran manera el precio por metro cuadrado. Igualmente el grafico muestra que las propiedades que tiene solo un estacionamiento son las propiedades que tienen un precio por metro cuadrado mayor.

```{r}
datos_2 <- datos_2 %>%
  mutate(cant_de_est = case_when(
    cant_de_est == 0 ~ "0",
    cant_de_est == 1 ~ "1",
    cant_de_est == 2 ~ "2",
    TRUE ~ "más de 3"
  ))

promedios2 <- datos_2 %>%
  group_by(cant_de_est) %>%
  summarise(promedio_precio_m2 = mean(precio_m2, na.rm = TRUE))

# Crear el gráfico
ggplot(promedios2, aes(x = cant_de_est, y = promedio_precio_m2)) +
  geom_bar(stat = "identity") +
  labs(x = "Cantidad de estacionamientos", y = "Precio por m2") +
  ggtitle("Precio por m2 según número de estacionamientos") +
  theme_minimal()
```

```{r}
promedios3 <- datos_2 %>%
  group_by(Municipio) %>%
  summarise(promedio_precio_m2 = mean(precio_m2, na.rm = TRUE))

ggplot(promedios3, aes(x = Municipio, y = promedio_precio_m2)) +
  geom_bar(stat = "identity") +
  labs(x = "Municipio", y = "Precio por m2") +
  theme_minimal()
```

```{r}
promedios4 <- datos_2 %>%
  group_by(calefaccion) %>%
  summarise(promedio_precio_m2 = mean(precio_m2, na.rm = TRUE))

ggplot(promedios4, aes(x = calefaccion, y = promedio_precio_m2)) +
  geom_bar(stat = "identity") +
  labs(x = "Calefacción", y = "Impacto en el precio por m2") +
  ggtitle("Impacto de la calefacción en el precio por m2") +
  theme_minimal()
```

```{r}
promedios5 <- datos_2 %>%
  group_by(vista_al_mar) %>%
  summarise(promedio_precio_m2 = mean(precio_m2, na.rm = TRUE))

ggplot(promedios5, aes(x = vista_al_mar, y = promedio_precio_m2)) +
  geom_bar(stat = "identity") +
  labs(x = "Vista al mar", y = "Precio por m2") +
  theme_minimal()
```

Al analizar los tres graficos, se pueden destacat las siguientes observaciones:

Municipios: El gráfico que compara los diferentes municipios muestra que existe una clara diferencia en los precios por metro cuadrado entre los distintos municipios.

Calefacción: El siguiente gráfico indica que la presencia de calefacción parece afectar significativamente el precio por metro cuadrado

Vista al Mar: Una propiedad que tiene vista al mar si presebte aun precio por metro cuadrado superior a que al resto de las propiedades que no tienen.

A continuación, se presenta un gráfico que muestra la antigüedad de la propiedad y cómo varía el precio por metro cuadrado según el año de construcción. Se observa que, a medida que las propiedades son más nueveas, el precio por metro cuadrado tiende a aumentar.

Para llevar a cabo este análisis, fue necesario acotar ciertos datos y eliminar algunos valores atípicos que distorcionaban la visualización.

```{r}
datos_filtrados <- datos_2 %>%
  filter(precio_m2 <= 400)

media_años <- round(mean(datos_filtrados$año_de_const[datos_filtrados$año_de_const != 0], na.rm = TRUE))
datos_filtrados$año_de_const[datos_filtrados$año_de_const == 0] <- media_años

# Definir los reemplazos y los valores de reemplazo
reemplazos <- c(3, 10, 15, 90, 39, 95, 60)
valores_reemplazo <- c(2003, 2010, 2015, 1990, 1939, 1995, 1960)

# Aplicar las reglas de reemplazo
for (i in seq_along(reemplazos)) {
  datos_filtrados$año_de_const[datos_filtrados$año_de_const == reemplazos[i]] <- valores_reemplazo[i]
}

# Convertir año_de_const a tipo numérico
datos_filtrados$año_de_const <- as.numeric(datos_filtrados$año_de_const)

# Gráfico de dispersión para visualizar la relación entre año de construcción y precio por m2
ggplot(datos_filtrados, aes(x = año_de_const, y = precio_m2)) +
  geom_point(alpha = 0.7) +
  labs(x = "Año de construcción de la propiedad", y = "Precio por m2") +
  ggtitle("Relación entre año de construcción y precio por m2") +
  theme_minimal()

```

```{r}
datos_2 <- datos_2 %>%
  mutate(tipo_prop = case_when(
    tipo_prop == "Apartment" ~ "Apartamento",
    tipo_prop == "Commercial" ~ "Commercial",
    tipo_prop == "Office" ~ "oficina",
    tipo_prop == "House" ~ "casa",
    TRUE ~ "Otros"
  ))

# Calcular el promedio del precio por metro cuadrado para cada tipo de propiedad
promedios6 <- datos_2 %>%
  group_by(tipo_prop) %>%
  summarise(promedio_precio_m2 = mean(precio_m2, na.rm = TRUE))

datos_2$tipo_prop
# Crear el gráfico
ggplot(promedios6, aes(x = tipo_prop, y = promedio_precio_m2)) +
  geom_bar(stat = "identity") +
  labs(x = "Tipo de propiedad", y = "Promedio del precio por m2") +
  ggtitle("Promedio del precio por m2 según el tipo de propiedad") +
  theme_minimal()
```

```{r}
media_gastos <- mean(datos_2$Gastos_Comunes[datos_2$Gastos_Comunes != 0], na.rm = TRUE)

# Reemplazar los valores cero con la media calculada
datos_2$Gastos_Comunes[datos_2$Gastos_Comunes == 0] <- round(media_gastos)


ggplot(datos_2, aes(x = Gastos_Comunes, y = precio_m2)) +
  geom_point(alpha = 0.7) +
  labs(x = "Gastos Comunes", y = "Precio por m2") +
  ggtitle("Relación entre Gastos Comunes y precio por m2") +
  theme_minimal()

```
```{r}
mod <- lm(precio_m2 ~ Municipio + Gastos_Comunes + baños+ año_de_const + tipo_prop + vista_al_mar + cant_de_est , data = datos_2)

summary(mod)
```

A pesar de que las variabes comparadas con el precio por metro cuadrado linealemnete eran significativas para un aumento del precio por metro cuadrado, ahora nos podemos dar cuanta que no es asi. En el summary del modelo podemos darnos cuenta que no todas las variables son significativas y por otro lado el R2 da demaciado baji. Esto significa que las variables que tenemos en el modelo no describen en su totalidad el precio por metro cuadrado.


Error cuadratico medio:

```{r}
predicciones <- predict(mod, newdata = datos_2)

# Calcular el Error Cuadrático Medio 
library(Metrics)
mse_valor <- mse(datos_2$precio_m2, predicciones)

# MAPE:

mape_valor <- MAPE(datos_2$precio_m2, predicciones)
```

```{r}
#| echo: false

#Sub datos:

# A la columna direccion la quitamos porque estaba la columna municipio y es a lo que nosotros nos queremos enfocar. Por ptro lado, tambien sacamos la columna losa_radiante porque habia otra columna que es calefaccion y nos parecio repetitiva.
# Tenemos un problema y es que hay algunas variables que estan correlacionadas entre si, y a alguna de ellas, en nuestra opinion son importantes para predecir el precio de las propiedades. En este casa voamos a sacar la variable Apartments_per_Floor. La variable baños y cant_de_est tambien se saco.
#Tambien le voy a quitar la zona porque vamos a trabajar por municipios


datos_sub <- datos_2[, c("Gastos_Comunes", "cant_de_est", "tipo_prop", "vista_al_mar", "calefaccion", "Municipio", "baños", "precio_m2"), drop = FALSE]

```

```{r}
#| echo: false
#correlacion:
  
numerical_vars <- datos_sub %>%
  select_if(is.numeric)
  

# Calcular la matriz de correlación
cor_matrix <- cor(numerical_vars, use = "complete.obs")


library(corrplot)
# Visualizar la matriz de correlación
corrplot(cor_matrix, method = "circle", type = "upper", tl.cex = 0.6, tl.col = "black")


```

```{r}
#| echo: false
vif(mod)
```

La mayoria de las variables tienen valores de GVIF ajustados menores a 2, lo que generalmente se consudera aceptable por lo que no hay problemas graves de multicolinealidad en el modelo.

```{r}
#| echo: false
crPlots(mod)
```

Atípicos:

```{r}
#| echo: false
res <- rstudent(mod)
yhat <- fitted(mod)

which(abs(res)>3)

library(ggplot2)
ggplot(mod, aes(x=yhat, y= res))+
  geom_point()+
  geom_hline(yintercept = -3,color="darkblue")+
  geom_hline(yintercept = 3,color="darkblue")
```

En este caso hay una presencia de 4 datos atipocos. Hay uno que es super notorio y la idea es eliminarlo, con los otros tres hay que ver que se va hacer.



Bosques:

```{r}
#| echo: false
names(datos_sub)
intrain <- sample(x = 1:nrow(datos_sub), size =
nrow(datos_sub)*.7)
training <- datos_sub[intrain,]
testing <- datos_sub[-intrain,]
# ajustamos modelo lineal simple
rf <- randomForest(precio_m2 ~ .,data= training)
names(datos_2)
```

```{r}
#| echo: false

pred <- predict(rf, newdata = training)
results <- data.frame(
  Actual = training$precio_m2,
  Predicciones = pred
)

results<-results|>
  filter(Actual < 400 & Actual >1)

ggplot(results, aes(x = Actual, y = Predicciones)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0, color = "red") +
  labs( x = "Variables originales", y = "Variables predichas") +
  theme_minimal()



pred <- predict(rf, newdata = testing)
results <- data.frame(
  Actual = testing$precio_m2,
  Predicciones = pred
)

results<-results|>
  filter(Actual < 400 & Actual >1)

ggplot(results, aes(x = Actual, y = Predicciones)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0, color = "red") +
  labs( x = "Variables originales", y = "Variables predichas") +
  theme_minimal()
```
En este gráfico por más que los puntos esten bastantes dispersos al rededor de la línea roja siguen la linea creciente.
Por lo que nos podemos dar cuenta, que las variables predictoras no predicen muy bien a las variables originales.

```{r}
#| echo: false

media_años <- round(mean(datos_2$año_de_const[datos_2$año_de_const != 0], na.rm = TRUE))
datos_2$año_de_const[datos_2$año_de_const == 0] <- media_años

# Definir los reemplazos y los valores de reemplazo
reemplazos <- c(3, 10, 15, 90, 39, 95, 60, 966)
valores_reemplazo <- c(2003, 2010, 2015, 1990, 1939, 1995, 1960, 1966)

# Aplicar las reglas de reemplazo
for (i in seq_along(reemplazos)) {
  datos_2$año_de_const[datos_2$año_de_const == reemplazos[i]] <- valores_reemplazo[i]
}

# Convertir año_de_const a tipo numérico
datos_2$año_de_const <- as.numeric(datos_2$año_de_const)

library(rpart)
library(rattle)
# Separo la muestra en entrenamiento y testeo
inTrain <- sample(1:nrow(datos_2), nrow(datos_2)*.7)
train.set <- datos_2[inTrain,]
test.set <- datos_2[-inTrain,]

library(rpart.plot)
tree_ab <- rpart(precio_m2 ~ Municipio + año_de_const,
                 data = train.set,
                 control = rpart.control(minsplit = 5, # número mínimo de observaciones que deben existir en un nodo para ser dividido
                                         cp = 0.001, # parámetro de complejidad
                                         maxdepth = 30)) 
prp(tree_ab, 
    faclen = 0,           # No abreviar los nombres de las variables
    cex = 0.8,            # Tamaño del texto
    extra = 101,          # Mostrar tanto el número de observaciones como la proporción de la clase
    box.palette = "RdBu", # Colores de los nodos
    nn = TRUE) 


fancyRpartPlot(tree_ab)

names(datos_2_2)
```

En este paso se trato de ver en que condiciones estaba cada municipio. Creo que noquedo muy bien, pero es un intento de arbol

Metadatos :

```{r}
#| echo: false
# Creamos variables del tipo character
nombre_variable <- character()
tipo_variable <- character()
descripcion <- character()


# Creamos un dataframe donde vamos a almacenar la información de cada columna basandonos es: Nombre, Tipo de Dato, Descripción
tabla_variables <- data.frame(
  "Nombre de la variable" = nombre_variable,
  "Tipo de variable" = tipo_variable,
  "Descripción" = descripcion,
  stringsAsFactors = FALSE
)



# Creamos la tabla
tabla_variables[1,] <- c("direccion", "Character", "Ubicación donde se encuentra la propiedad")
tabla_variables[2,] <- c("nro_de_piso", "Character", "Número de piso de la propiedad")
tabla_variables[3,] <- c("tipo_prop", "Character", "Tipo de poropiedad, como apartamento, oficina, casa")
tabla_variables[4,] <- c("Condicion", "Character", "Condición en la que esta la vivienda, es una variable que se separa en categorias (Excelente, Buena, Renovada)")
tabla_variables[5,] <- c("disposicion", "Character", "En que posición se encuentra la propiedad separada en categorías (interior, frente, fondo)")
tabla_variables[6,] <- c("m2_terraza", "Numérica", "Metros cuadrado de la terraza")
tabla_variables[7,] <- c("cant_cuartos", "Numérica", "Cantidad de dormitoros de la propiedad")
tabla_variables[8,] <- c("vivienda_social", "Dummy", "Si la propiedad esta destinada para vivienda social, variable de si y no")
tabla_variables[9,] <- c("Closet", "Dummy", "Espacio de guardaropas en la propiedad, variable de si y no")
tabla_variables[10,] <- c("Garage", "Dummy", "Garage en la propiedad, variable de si y no")
tabla_variables[11,] <- c("Playroom", "Dummy", "Sala de juegos en la propiedad, variable de si y no")
tabla_variables[12,] <- c("WiFi", "Dummy", "Conección a wifi en la propiedad, variable de si y no")
tabla_variables[13,] <- c("balcon", "Dummy", "Balcon en la propiedad, variable de si y no")
tabla_variables[14,] <- c("jardin", "Dummy", "Jardin en la propiedad, variable de si y no ")
tabla_variables[15,] <- c("amueblado", "Dummy", "La propiedad viene con los muebles incluidos a la hora de ser alquilado, variable de si y no ")
tabla_variables[16,] <- c("Updated", "Fecha", "Última fecha que fue actualizado el listado")
tabla_variables[17,] <- c("Apartments_per_Floor", "Numérica", "Número de apartamentos por piso en el edificio")
tabla_variables[18,] <- c("zona", "Character", "En que zona de Montevideo se encuentra la propiedad")
tabla_variables[19,] <- c("baños", "Numérica", "Cuántos cuartos hay en la propiedad")
tabla_variables[20,] <- c("m2_totales", "Numérica", "Metros cuadrados de la propiedad, en dolares")
tabla_variables[21,] <- c("cant_de_est", "Numérica", "Cantidad de estacionamientos que tiene disponible la propiedad")
tabla_variables[22,] <- c("Barbecue", "Dummy", "Barbacoa en la propiedad, variable de si y no ")
tabla_variables[23,] <- c("Patio", "Dummy", "Patio en la propiedad, variable de si y no ")
tabla_variables[24,] <- c("Pet", "Dummy", "Si se aceptan perros o no")
tabla_variables[25,] <- c("Duplex", "Numérica", "Si es un duplex o no, duplex es una propiedad que esta encima de otra y generalmente son dos")
tabla_variables[26,] <- c("zona_barbacoa", "Dummy", "Si hay una zona de barbacoa en el edificio de la propiedad, variable de si y no ")
tabla_variables[27,] <- c("deposito", "Dummy", "Área de almacenaiento o depósito en la propiedad, variable de si y no ")
tabla_variables[28,] <- c("losa_radiante", "Dummy", "Losa radiante en la propiedad, variable de si y no ")
tabla_variables[29,] <- c("precio_m2", "Numérica", "El precio de la propiedad por metros cuadrados")
tabla_variables[30,] <- c("Common_Expenses", "Numérica", "Gastos comunes asociados a la propiedad, en dolares")
tabla_variables[31,] <- c("cant_de_piso", "Numérica", "Núemero total de piso en el edificio")
tabla_variables[32,] <- c("condicion", "Character", "En que condición se encuentra el apartamento searado en caregorías(Good condicion, 	Excellent condicion, 	Brand new)")
tabla_variables[33,] <- c("cant_habitaciones", "Numérica", "Cantidad de habitaciones en la propiedad")
tabla_variables[34,] <- c("año_de_const", "Numérica", "En que año fue construida la propiedad")
tabla_variables[35,] <- c("vista_al_mar", "Dummy", "Propiedad con vista al mar o no, variable de si y no")
tabla_variables[36,] <- c("Living_Room", "Dummy", "Propiedad con living o no")
tabla_variables[37,] <- c("Pool", "Numérica", "Pool en la propiedad")
tabla_variables[38,] <- c("coneccion_cas", "Dummy", "Propiedad cuenta con conección a gas directa o no, variable de si y no")
tabla_variables[39,] <- c("calefaccion", "Dummy", "Propiedad con calefacción, variable de si y no")
tabla_variables[40,] <- c("Gym", "Dummy", "Propiedad con gym, variable de si y no")
tabla_variables[41,] <- c("Air_condicioning", "Dummy", "Propiedad con aire acondicionado, variable de si y no")
tabla_variables[42,] <- c("Solarium", "Dummy", "Propiedad con solarium, variable de si y no")



# Resultado
tabla_variables <- data.frame(tabla_variables)
gt(tabla_variables)

```
