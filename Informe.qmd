---
title: "Informe"
format: pdf
execute: 
  echo: false
  warning: false
  message : false
author: "Diego Da Rosa, Valentina Soldini, Nahuel Bizoso"
editor: visual
toc: true
---

```{r}
library(gridExtra)
library(tidyverse)
library(GGally)
library(car)
library(skedastic)
library(robustbase)
library(tseries)
library(here)
library(readxl)
library(ggplot2)
library(forcats)
library(gt)
library(dplyr)
library(randomForest)
library(modelr)
library(knitr)
```

## Introducción:

El mercado inmobiliario ha sido ha sido de gran importancia durante muchos años, tanto para inversores como para personas que buscan un alquiler una propiedad. La variabilidad de los precios puede depender de diferentes factores, como es la ubicación, caracteristicas de la propiedad, también la seguridad de la zona y algunos otros aspectos. Este estudio tiene como objetivo analizar como varían los precios de las propiedades teniendo en cuenta diferentes aspectos. Para realizar este análisis, plenteamos las diferentes preguntas de investigación:

-   ¿Cambia el precio con respecto al barrio en que se ecuestre la propiedad?
-   ¿En que municipio hay más alquileres?
-   ¿Cuál es la variable que más influye en el precio?
-   ¿Influye cuán peligroso es la zona para alquilar la propiedad y disminuye el precio? Mejorará el modelo?
-   ¿Hay alguna variable que debería de eliminarse al modelo?

Estas preguntas guiarán nuestro analisis para comprender mejor los factores que afectan los precios en el mercado inmobiliario y proporcionar una herramienta útil para los distintos agentes, ya sean compradores, vendedores, inversores y agentes inmobiliarios.

## Datos

Los datos utilizados en este análisis se han extraidos de una pagina web llamada **kaggle**, consiste en una plataforma web que reúne la comunidad Data Science, con más de 536 mil miembros activos en 194 países. Estos datos contienen variables que describen diversos aspectos de una propiedad disponibles para alquilar en el año 2023. La base de datos abarcan un total de 2361 registros de diferentes propiedades y 45 variables que incluyen desde el precio hasta diferentes caracteristicas internas y externas de la propiedad.

Puedes encontrar el dataset en el siguiente enlace: [Precio de alquiler de casas en Montevideo Dataset](https://www.kaggle.com/datasets/lasm1984/house-rental-price-in-montevideo?select=houses.csv)

```{r}
# Lectura de los datos:
# Datos sobre precio de casas
datos <- read_csv(here("houses.csv"))

```

## Análisis exploratorio de los datos

Para responder adecuadamente las preguntas planteadas, se inició con una limpieza de los datos. Esta limpieza incluyó la eliminación de datos duplicados, valores atípocos y valores nulos. Además, se decidió eliminar las variables *Furnished...32*, *Furnished...42*, y *Floors*. Las dos primeras variables fueron eliminadas debido a la existencia de una tercera que contenía la misma información. La columna *Floors* se eliminó ya que no aportaba información relevante, contenía muchos datos faltantes y los datos presentes eran inconsistentes y poco fiables.

Otra modificación realizada fue la agrupación d elas zonas de Montevideo en municipios. Se creó una variable adicional *Municipio* que contiene todas las zonas de Montevido separadas por municipios, se puede observar en la Tabla 1 que zonas corresponden a cada municipio. Adicionalmente, se convirtió la variable *precio* por *precio_m2* (precio por metros cuadrados) para facilitar el análisis de los datos.

Como se mencionó anteriormente, ciertas variables contenían valores nulos. Para abordar este problema, se emplearon diferentes métodos según las características de cada variable:

-   **dierección**: Se asignó el nombre de la zona correspondiente a la propiedad.
-   **precio_m2**: Se calculó la media de toda la columna de dicha variable y se coloco este valor en las filas donde habia un dato faltante.
-   **concición**: Se asignó la categoria más frecuente. Lo mismo se realizó con la variable *disposición*

Además, se recodificaron cariables para mejorar su análisis y para evaluar cómo algunas de las variables del modelo afectaban linealmente a la variable predictora, **precio_m2**

```{r, fig.cap="Municipios", label:fig-plot0}
tabla_municipio <- data.frame(
  Municipio = c("Municipio A","Municipio B", "Municipio C", "Municipio CH", "Municipio D", "Municipio E", "Municipio F", "Municipio G"),
  Columna2 = c("Cerro, La Teja, Paso de la Arena, Belvedere, Nuevo París, Prado",
  "Cordón, Parque Rodó, Palermo, Barrio Sur, Ciudad Vieja, Centro, Aguada, La Comercial", 
  "Aguada, Arroyo Seco, Atahualpa, Bella Vista, Brazo Oriental, Capurro, Goes, Jacinto Vera, La Comercial, Mercado Modelo, Reducto, Villa Muñoz", 
  "Tres Cruces, La Blanqueada, Parque Batlle, Villa Dolores, Buceo, Pocitos, Punta Carretas",
  "Piedras Blancas, Villa Española, Unión, Bolivar, Cerrito",
  "Malvín Norte, Malvín, Carrasco Norte, Carrasco, Punta Gorda, Buceo, La Blanqueada",
  "Maroñas, Flor de Maroñas, Villa Española, Ituzaingó, Jardines del Hipódromo, Piedras Blancas",
  "Lezica, Peñarol, Nuevo París, Sayago, Conciliación, Colón"))


Municipios <- gt(tabla_municipio) |>
  cols_label(
    Columna2 = md("**Zonas**"),
    Municipio = md("**Municipio**")
  ) |>
  tab_style(
    style = cell_text(size = pct(75)),
    locations = cells_column_labels()
  )
```

## Limpieza

```{r}
# ORDENANDO LOS DATOS:

#Eliminando los datos atipicos

datos_2 <- datos %>% filter(Price <= 150000 & Common_Expenses <= 10000)

datos_2 <- datos_2|>
  rename(precio = Price,
         nro_de_piso = Floor,
         cant_de_piso = Number_of_Floors,
         Gastos_Comunes = Common_Expenses,
         apartamentos_por_piso = Apartments_per_Floor,
         zona = Zone,
         condicion = Condition,
         disposicion = Disposition,
         cant_cuartos = Bedrooms...18,
         cant_habitaciones = Bedrooms...13,
         año_de_const = Year_of_Construction,
         vista_al_mar = Sea_View,
         deposito = Storage,
         jardin = Garden,
         losa_radiante = Radiant_Floor_Heating,
         amueblado = Furnished...45,
         direccion = Address,
         tipo_prop = Property_Type,
         baños = Bathrooms,
         m2_const = Built_Square_Meters,
         m2_totales = Land_Square_Meters,
         m2_terraza = Terrace_Square_Meters,
         vivienda_social = Social_Housing,
         cant_de_est = Garages,
         conexion_gas = Gas_Pipeline,
         calefaccion = Heating,
         zona_barbacoa = Grill,
         balcon = Balcony
         )


# Precio por metro cuadrado

datos_2 <- datos_2 |>
  mutate(precio_m2 = ifelse(m2_const == 0, 0, precio / m2_const))

# Quitando las columnas Furnished...32, Furnished...42, y Floors

datos_2 <- 
  datos_2|>
  select(-Furnished...32, -Furnished...42, -Floors, -precio, -m2_const)

# Datos sin duplicados
datos_2 <- datos_2[!duplicated(datos_2), ]

#utilizamos las coincidencias unicas que tienen las filas, ya que no tenemos una fecha de snapshot de mercado libre.
# diagrama de cajas solo de las numericas
# agregar el grafico de 0 y 1

# Cambiando la zona por municipios

datos_2 <- datos_2 %>% # Datos
  mutate(Municipio = case_when( # Casos donde a cada barrio le vamos a asociar un municipio
    
    zona %in% c("Cerro","La Teja","Paso de la Arena","Belvedere","Nuevo París","Prado")  ~ "Municipio_A",

    zona %in% c("Cordón","Parque Rodó","Palermo","Barrio Sur","Ciudad Vieja","Centro","Aguada","La Comercial") ~ "Municipio_B",

    zona %in% c("Aguada", "Arroyo Seco", "Atahualpa", "Bella Vista", "Brazo Oriental", "Capurro", "Goes", "Jacinto Vera", "La Comercial", "Mercado Modelo", "Reducto", "Villa Muñoz") ~ "Municipio_C",

    zona %in% c("Tres Cruces", "La Blanqueada", "Parque Batlle", "Villa Dolores", "Buceo", "Pocitos", "Punta Carretas") ~ "Municipio_CH",

    zona %in% c("Piedras Blancas", "Villa Española", "Unión","Bolivar","Cerrito") ~ "Municipio_D",

    zona %in% c("Malvín Norte","Malvín", "Carrasco Norte", "Carrasco", "Punta Gorda", "Buceo", "La Blanqueada") ~ "Municipio_E",

    zona %in% c("Maroñas", "Flor de Maroñas", "Villa Española", "Ituzaingó", "Jardines del Hipódromo", "Piedras Blancas") ~ "Municipio_F",

    zona %in% c("Lezica", "Peñarol", "Nuevo París", "Sayago", "Conciliación", "Colón") ~ "Municipio_G",

    TRUE ~ "Otro" # Por si hay barrios que no estén en la lista
  ))
```

```{r}
# Función para reemplazar valores NA en 'direccion' con los valores de 'zona'
reemplazar_direccion <- function(datos_2) {
  if (!"direccion" %in% colnames(datos_2) || !"zona" %in% colnames(datos_2)) {
    stop("Las columnas 'direccion' y 'zona' deben estar presentes en los datos.")
  }
  datos_2$direccion <- ifelse(is.na(datos_2$direccion), datos_2$zona, datos_2$direccion)
  return(datos_2)
}
datos_2 <- reemplazar_direccion(datos_2)


# Función para rellenar valores NA en 'precio_m2' con la media de los valores existentes
rellenar_na_precio_m2 <- function(datos_2) {
  # Verificar si la columna 'precio_m2' existe
  if (!"precio_m2" %in% colnames(datos_2)) {
    stop("La columna 'precio_m2' no está presente en los datos.")
  }
media_precio_m2 <- mean(datos_2$precio_m2, na.rm = TRUE)
  datos_2$precio_m2[is.na(datos_2$precio_m2)] <- media_precio_m2
  return(datos_2)
}

datos_2 <- rellenar_na_precio_m2(datos_2)


nombre_1 <- names(sort(table(datos_2$condicion), decreasing = TRUE)[1])
datos_2$condicion[datos_2$condicion %in% NA] <- nombre_1


nombre_2 <- names(sort(table(datos_2$disposicion), decreasing = TRUE)[1])
datos_2$disposicion[datos_2$disposicion %in% NA] <- nombre_2

detector_nulos <- function(datos_2){ # Función
  data_nulos <- data.frame(cantidad_nulos = sapply(datos_2, function(x) sum(is.na(x)))) 
  # Aplicamos la función sapply par ver sumar la cantidad total de nulos en las los datos y a este objeto lo guardamos como un dataframe
  
  resultado <- data_nulos %>% filter(cantidad_nulos > 0)
  return(resultado)
  # De este DataFrame filtramos solo las columnas que tengan una cantidad total de valores nulos mayor a 0
}

detector_nulos(datos_2)

```

**Análisis Exploratorio para Determinar las variables que más Influyen en el Precio por metro cuadrado:**

A continuación, se presentarán algunas visualizaciones para responder las preguntas planteadas.

```{r}
# Convertir columnas categóricas a factores si es necesario
datos_2$tipo_prop <- as.factor(datos_2$tipo_prop)
datos_2$zona <- as.factor(datos_2$zona)
datos_2$condicion <- as.factor(datos_2$condicion)
datos_2$disposicion <- as.factor(datos_2$disposicion)
datos_2$vista_al_mar <- as.factor(datos_2$vista_al_mar)
datos_2$vivienda_social <- as.factor(datos_2$vivienda_social)
datos_2$Barbecue <- as.factor(datos_2$Barbecue)
datos_2$Living_Room <- as.factor(datos_2$Living_Room)
datos_2$Closet <- as.factor(datos_2$Closet)
datos_2$Patio <- as.factor(datos_2$Patio)
datos_2$Pool <- as.factor(datos_2$Pool)
datos_2$Garage <- as.factor(datos_2$Garage)
datos_2$Pet <- as.factor(datos_2$Pet)
datos_2$conexion_gas <- as.factor(datos_2$conexion_gas)
datos_2$Playroom <- as.factor(datos_2$Playroom)
datos_2$Duplex <- as.factor(datos_2$Duplex)
datos_2$calefaccion <- as.factor(datos_2$calefaccion)
datos_2$WiFi <- as.factor(datos_2$WiFi)
datos_2$Gym <- as.factor(datos_2$Gym)
datos_2$balcon <- as.factor(datos_2$balcon)
datos_2$Air_Conditioning <- as.factor(datos_2$Air_Conditioning)
datos_2$jardin <- as.factor(datos_2$jardin)
datos_2$losa_radiante <- as.factor(datos_2$losa_radiante)
datos_2$Solarium <- as.factor(datos_2$Solarium)
datos_2$amueblado <- as.factor(datos_2$amueblado)
datos_2$zona_barbacoa <- as.factor(datos_2$zona_barbacoa)
datos_2$deposito <- as.factor(datos_2$deposito)
datos_2$baños <- as.factor(datos_2$baños)
```



# Visualización


Cual municipio es mas costoso para alquilar?

```{r}
promedios3 <- datos_2 %>%
  group_by(Municipio) %>%
  summarise(promedio_precio_m2 = mean(precio_m2, na.rm = TRUE))

ggplot(promedios3, aes(x = fct_reorder(Municipio, promedio_precio_m2), y = promedio_precio_m2)) +
  geom_bar(stat = "identity") +
  labs(x = "Municipio", y = "Precio por m2") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

En este gráfico se puede apreciar como el Municipio A tiene los precios por metro cuadrado pormedios mas altos, seguido por el Municipio E. Este gráfico es útil para ver que zonas de Montevideo son mas caras y cuáles son mas económicas, lo cual es valioso para los inquilinos al decidir en que área desean vivir según sus preferencias y presupuesto.

A continuación, se presenta un gráfico que muestra la antigüedad de la propiedad y cómo varía el precio por metro cuadrado según el año de construcción. Se observa que, a medida que las propiedades son más nueveas, el precio por metro cuadrado tiende a aumentar.

Para llevar a cabo este análisis, fue necesario acotar ciertos datos y eliminar algunos valores atípicos que distorcionaban la visualización.

```{r}
datos_filtrados <- datos_2 %>%
  filter(precio_m2 <= 400)

media_años <- round(mean(datos_filtrados$año_de_const[datos_filtrados$año_de_const != 0], na.rm = TRUE))
datos_filtrados$año_de_const[datos_filtrados$año_de_const == 0] <- media_años

# Definir los reemplazos y los valores de reemplazo
reemplazos <- c(3, 10, 15, 90, 39, 95, 60)
valores_reemplazo <- c(2003, 2010, 2015, 1990, 1939, 1995, 1960)

# Aplicar las reglas de reemplazo
for (i in seq_along(reemplazos)) {
  datos_filtrados$año_de_const[datos_filtrados$año_de_const == reemplazos[i]] <- valores_reemplazo[i]
}

# Convertir año_de_const a tipo numérico
datos_filtrados$año_de_const <- as.numeric(datos_filtrados$año_de_const)

# Gráfico de dispersión para visualizar la relación entre año de construcción y precio por m2
ggplot(datos_filtrados, aes(x = año_de_const, y = precio_m2)) +
  geom_point(alpha = 0.7) +
  labs(x = "Año de construcción de la propiedad", y = "Precio por m2") +
  ggtitle("Relación entre año de construcción y precio por m2") +
  theme_minimal()

```

```{r}
datos_2 <- datos_2 %>%
  mutate(tipo_prop = case_when(
    tipo_prop == "Apartment" ~ "Apartamento",
    tipo_prop == "Commercial" ~ "Commercial",
    tipo_prop == "Office" ~ "oficina",
    tipo_prop == "House" ~ "casa",
    TRUE ~ "Otros"
  ))

# Calcular el promedio del precio por metro cuadrado para cada tipo de propiedad
promedios6 <- datos_2 %>%
  group_by(tipo_prop) %>%
  summarise(promedio_precio_m2 = mean(precio_m2, na.rm = TRUE))

# Crear el gráfico
ggplot(promedios6, aes(x = tipo_prop, y = promedio_precio_m2)) +
  geom_bar(stat = "identity") +
  labs(x = "Tipo de propiedad", y = "Promedio del precio por m2") +
  ggtitle("Promedio del precio por m2 según el tipo de propiedad") +
  theme_minimal()
```

Pregunta) ¿Cómo se distribuyen la disposición de los alquileres y el según precio por metro cuadrado promedio?

```{r}
#Pregunta 1) ¿Cómo se distribuyen los municipios y el precio promedio de alquiler por municipio? ¿Cómo se distribuyen la disposición de los alquileres y el precio promedio según la disposición de los alquileres?


# Gráfico Grupo de Precio promedio por disposición
grupo_disposicion <- datos_2 %>%
  group_by(disposicion) %>%
  summarise(Cantidad = mean(precio_m2, na.rm = TRUE))


# Gráfico de Precio promedio por disposición
ggplot(grupo_disposicion, aes(x = fct_reorder(disposicion, Cantidad), y = Cantidad)) +
  geom_bar(stat = "identity") +
  labs(x = "Disposición", y = "Precio promedio") +
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 10))

```

Pregunta 2) ¿Cómo se distribuye el tipo de propiedad de los alquileres y el precio promedio de el tipo de propiedad? ¿¿Cómo se distribuye las condiciones de los alquileres y el precio promedio según las condiciones de los alquileres?

```{r}
# Grupo de Precio promedio por condición de la vivienda
grupo_condicion <- datos_2 %>%
  group_by(condicion) %>%
  summarise(Cantidad = mean(precio_m2))


# Gráfico de Precio promedio por condición de la vivienda
ggplot(grupo_condicion, aes(x = fct_reorder(condicion, Cantidad), y = Cantidad)) +
  geom_bar(stat = "identity") +
  labs(x = "Condición", y = "Precio promedio") +
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1, size = 10))

```

Al considerar la condición de los alquileres, se puede observar que la mayoría de las propiedades se encuentran en buenas condiciones. Esto es una buena señal para inquilinos que directamente se quieren trasladar a esa propiedad. En términos de precio promedio por metro cuadrado, los alquileres "En Construcción", "Para Estrenar" y en "Excelente Condición" son los más caros.

```{r, eval=FALSE}
#shiny 
selectInput(
  inputId,
  label,
  choices,
  selected = NULL,
  multiple = TRUE,
  selectize = TRUE,
  width = NULL,
  size = NULL
)
```

```{r}

datos_2$precio_m2 <- as.numeric(datos_2$precio_m2)

datos_3 <- datos_2 %>%
  mutate(nro_de_piso = case_when(
    nro_de_piso >= 15 ~ "Número de piso mayor a 15",
    TRUE ~ "Número de piso menor a 15"))

datos_3 <- datos_3 %>%
  mutate(precio_m2 = case_when(
    precio_m2 >= 13 ~ "Precio m2 menor 13",
    TRUE ~ "Precio m2 mayor 13"
  ))

library(ggmosaic)
ggplot(data = datos_3) +
 geom_mosaic(aes(x = product(precio_m2, nro_de_piso), fill= precio_m2)) +
 labs(title='Comparación del precio por metro cuadrado y el número de piso', x = "Número de piso", y = "Precio por metro cuadrado")+
 theme(legend.position = "bottom")   

```

Este grafico representa la relacion entre el precio por metro cuadrado (*precio_m2*) y el número de piso (*nro_de_piso*) de las propiedades, categorizando el precio por metro cuadrado en dos grupos: menor o igual a 13 y mayor a 13, también se categorizó el número de piso en dos grupos: menor o igual a 15 pisos y mayor a 15 pisos. Para los precios por metro cuadrado menor o igual a 13, se observa que son propiedades que tienen pisos bajos menores a 15. Para los precios por metro cuadrado mayores a 13, se observa que son propiedades que tienen pisos mayores a 15. Por lo tanto, en pisos mas bajos, predominan los precios por metro cuadrado menores o iguales a 13. Por otro lado, para los pisos mas altos, los precios por metro cuadrado mayores a 13 son los más comunes. Esto sugiere que el número de piso podría tener una influencia en el precio por metro cuadrado, con pisos mas altos tendiendo a precios mayores por metro cuadrado en comparación con pisos más bajos.

Pregunta 12) ¿Cómo afecta al inmueble el tener cierta cantidad de comodidades como son Baños, Garages, Cuartos y Habitaciones en el precio?

```{r}

datos_2 <- datos_2 %>%
  mutate(cant_cuartos = case_when(
    cant_cuartos == 0 ~ "0",
    cant_cuartos == 1 ~ "1",
    cant_cuartos == 2 ~ "2",
    cant_cuartos == 3 ~ "3",
    TRUE ~ "mas de 3"
  ))
promedios1 <- datos_2 %>%
  group_by(cant_cuartos) %>%
  summarise(promedio_precio_m2 = mean(precio_m2, na.rm = TRUE))


ggplot(promedios1, aes(x =  fct_reorder(cant_cuartos, promedio_precio_m2), y = promedio_precio_m2)) +
  geom_bar(stat = "identity") +
  labs(x = "Cant. cuartos", y = "Precio por m2") +
  ggtitle("Precio por m2 según cant. de cuartos") +
  theme_minimal()
```

Pregunta: Como afecta el incremeto del precio por metro cuadrado, al aumentar la cantidad de baños?

A continuación se muestra un gráfico que ilustra cómo la cantidad de baños afecta el precio por metro cuadrado. En este análisis, la variable baños se recodifico en cinco grupos para facilitar su inetrpretación y análisis.

```{r}
datos_2 <- datos_2 %>%
  mutate(baños = case_when(
    baños == 0 ~ "0",
    baños == 1 ~ "1",
    baños == 2 ~ "2",
    TRUE ~ "mas de 2"
  ))

promedios1 <- datos_2 %>%
  group_by(baños) %>%
  summarise(promedio_precio_m2 = mean(precio_m2, na.rm = TRUE))


ggplot(promedios1, aes(x = fct_reorder(baños,promedio_precio_m2), y = promedio_precio_m2)) +
  geom_bar(stat = "identity") +
  labs(x = "Baños", y = "Precio por m2") +
  ggtitle("Precio por m2 según número de baños") +
  theme_minimal()
```

Se observe que el precio se incrementa hasta la propiedad que tiene dos baños. Sin embargo, después de dos baños, el impacto en el precio es menor. Es decir, una propiedad con tres baños es mas cara que una con uno, pero es considerablemente más cara que una de dos baños. Parece que llega a un punto en el que la cantidad de baños no afecta el precio por metro cuadrado de una propiedad.

Pregunta: Como afecta al incremeto del precio el aumento de la cantidad de estacionamientos?

Similar al anterior razonamiento, los valores de la variable *cant_de_est* se recodificaron en cuatro grupos para una mejor interpretación.

```{r}
datos_2 <- datos_2 %>%
  mutate(cant_de_est = case_when(
    cant_de_est == 0 ~ "0",
    cant_de_est == 1 ~ "1",
    cant_de_est == 2 ~ "2",
    TRUE ~ "más de 3"
  ))

promedios2 <- datos_2 %>%
  group_by(cant_de_est) %>%
  summarise(promedio_precio_m2 = mean(precio_m2, na.rm = TRUE))

# Crear el gráfico
ggplot(promedios2, aes(x = fct_reorder(cant_de_est,promedio_precio_m2), y = promedio_precio_m2)) +
  geom_bar(stat = "identity") +
  labs(x = "Cantidad de estacionamientos", y = "Precio por m2") +
  ggtitle("Precio por m2 según número de estacionamientos") +
  theme_minimal()
```

De manera similar a lo observado anteriorente, el precio por metro cuadrado de la propiedad es mayor cuando la propiedad tiene al menos un estacionamiento. Sin embargo, el incremento en el precio no tan relevare al pasar de uno a dos estacionamientos. Curiosamente, las propiedades con tres estacionamientos son más caras que las que tienen dos, aunque la diferencia no es tan marcada como entre tener cero y uno.




Recodificamos ahora la cantidad de cantidad de habitaciones y la cantidad de cuartos. Vemos que en general, el tener 2 cuartos o 2 habitaciones hace que el precio promedio por metro cuadrado sea mayor, esto también se cumple para los alquileres con 3 o más cuartos / habitaciones.

```{r}

datos_2 <- datos_2 %>%
  mutate(cant_cuartos = case_when(
    cant_cuartos == 0 ~ "0",
    cant_cuartos == 1 ~ "1",
    cant_cuartos == 2 ~ "2",
    TRUE ~ "más de 3"
  ))


datos_2 <- datos_2 %>%
  mutate(cant_habitaciones = case_when(
    cant_habitaciones == 0 ~ "0",
    cant_habitaciones == 1 ~ "1",
    cant_habitaciones == 2 ~ "2",
    TRUE ~ "más de 3"
  ))






promedios3 <- datos_2 %>%
  group_by(cant_cuartos) %>%
  summarise(promedio_precio_m2 = mean(precio_m2, na.rm = TRUE))


promedios4 <- datos_2 %>%
  group_by(cant_habitaciones) %>%
  summarise(promedio_precio_m2 = mean(precio_m2, na.rm = TRUE))





# Crear el gráfico
ggplot(promedios3, aes(x = fct_reorder(cant_cuartos, 
                       promedio_precio_m2), 
                       y = promedio_precio_m2)) +
  geom_bar(stat = "identity") +
  labs(x = "Cantidad de cuartos", y = "Precio por m2") +
  ggtitle("Precio por m2 según número de cuartos") +
  theme_minimal()




ggplot(promedios4, aes(x = fct_reorder(cant_habitaciones,  
                       promedio_precio_m2), 
                       y = promedio_precio_m2)) +
  geom_bar(stat = "identity") +
  labs(x = "Cantidad de habitaciones", y = "Precio por m2") +
  ggtitle("Precio por m2 según número de habitaciones") +
  theme_minimal()



```







```{r}
promedios4 <- datos_2 %>%
  group_by(calefaccion) %>%
  summarise(promedio_precio_m2 = median(precio_m2, na.rm = TRUE))

ggplot(promedios4, aes(x = fct_reorder(calefaccion,promedio_precio_m2), y = promedio_precio_m2)) +
  geom_bar(stat = "identity") +
  labs(x = "Calefacción", y = "Impacto en el precio por m2") +
  ggtitle("Impacto de la calefacción en el precio por m2") +
  theme_minimal()
```

```{r}
promedios4 <- datos_2 %>%
  group_by(calefaccion) %>%
  summarise(promedio_precio_m2 = median(precio_m2, na.rm = TRUE))

ggplot(promedios4, aes(x = calefaccion, y = promedio_precio_m2)) +
  geom_bar(stat = "identity") +
  labs(x = "Calefacción", y = "Impacto en el precio por m2") +
  ggtitle("Impacto de la calefacción en el precio por m2") +
  theme_minimal()
```

```{r}
promedios5 <- datos_2 %>%
  group_by(vista_al_mar) %>%
  summarise(promedio_precio_m2 = median(precio_m2, na.rm = TRUE))

ggplot(promedios5, aes(x = vista_al_mar, y = promedio_precio_m2)) +
  geom_bar(stat = "identity") +
  labs(x = "Vista al mar", y = "Precio por m2") +
  theme_minimal()
```

```{r}
media_gastos <- mean(datos_2$Gastos_Comunes[datos_2$Gastos_Comunes != 0], na.rm = TRUE)

# Reemplazar los valores cero con la media calculada
datos_2$Gastos_Comunes[datos_2$Gastos_Comunes == 0] <- round(media_gastos)


ggplot(datos_2, aes(x = Gastos_Comunes, y = precio_m2)) +
  geom_point(alpha = 0.7) +
  labs(x = "Gastos Comunes", y = "Precio por m2") +
  ggtitle("Relación entre Gastos Comunes y precio por m2") +
  theme_minimal()

```

En este gráfico, muestra una tendencia lineal, se puede decir que los gastos comunes son independientes con el precio por metro cuadrado.

## Modelo Predictivo

Con el objetivo de identificar si las variables del modelo explican correctamente la variable de respuesta, en este caso *precio_m2*, se decidió hacer una exploración con ciertas variables. Para ello, se elaboraron gráficos lineales que anteriormente estan precentadas que comparan distintas variables con el precio por metro cuadrado, permitiendo observar cómo cada una de estas afecta el precio de manera específica. Este análisis se ha realizado con casi todas las variables disponibles en los datos.

Analizar esto, hacer un histograma y no una densidad

```{r}
plot(hist(datos_2$precio_m2, 
     main = "Histograma de Precio por Metro Cuadrado", 
     xlab = "Precio por Metro Cuadrado", 
     ylab = "Frecuencia", 
     col = "lightblue", 
     border = "black"))

median(datos_2$precio_m2)
mean(datos_2$precio_m2)

```

```{r}
mod <- lm(precio_m2 ~ Municipio + Gastos_Comunes + baños+ año_de_const + tipo_prop + vista_al_mar + cant_de_est , data = datos_2)

summary(mod)


coeficientes <- summary(mod)$coefficients
estimador <- summary(mod)$coefficients[,1]
error_standar <- summary(mod)$coefficients[,2]
valor_t <- summary(mod)$coefficients[,3]
p_valor <- summary(mod)$coefficients[,4]

coef <- data.frame(
  Estimador = estimador,
  Error_Estandar = error_standar,
  Valor_t = valor_t,
  P_Valor = p_valor
)
coef
```

En el modélo se seleccionaron ciertas variables que en principios explicaban el crecimiento del precio por metro cuadrado, pero como se puede observar no es suficiente, ya que en conjunto todas las variables no son significativas para el modelo, es decir no explican correctamente a la variable de respuesta *precio_m2*, en la tabla se puede observar como ha algunos p valor que son muy grandes por lo tanto esas variables no son significativas.

Error cuadratico medio:

```{r}
predicciones <- predict(mod, newdata = datos_2)

# Calcular el Error Cuadrático Medio 
library(Metrics)
mse_valor <- mse(datos_2$precio_m2, predicciones)
sqrt(mse_valor)

# MAPE:

library(MLmetrics)
mape_valor <- MAPE(datos_2$precio_m2, predicciones)/100
```

248 predice mal

```{r}

#Sub datos:

# A la columna direccion la quitamos porque estaba la columna municipio y es a lo que nosotros nos queremos enfocar. Por ptro lado, tambien sacamos la columna losa_radiante porque habia otra columna que es calefaccion y nos parecio repetitiva.
# Tenemos un problema y es que hay algunas variables que estan correlacionadas entre si, y a alguna de ellas, en nuestra opinion son importantes para predecir el precio de las propiedades. En este casa voamos a sacar la variable Apartments_per_Floor. La variable baños y cant_de_est tambien se saco.
#Tambien le voy a quitar la zona porque vamos a trabajar por municipios


datos_sub <- datos_2[, c("Gastos_Comunes", "cant_de_est", "tipo_prop", "vista_al_mar", "calefaccion", "Municipio", "baños", "precio_m2"), drop = FALSE]
names(datos)

library(naniar)

datos_su <- datos_2[, c("Gastos_Comunes", "cant_de_est", "tipo_prop", "vista_al_mar", "calefaccion", "Municipio", "baños", "precio_m2"), drop = FALSE]

vis_miss(datos_su)
```

Multicolinealidad:

```{r}
vif(mod)
```

La mayoria de las variables tienen valores de GVIF ajustados menores a 2, lo que generalmente se consudera aceptable por lo que no hay problemas graves de multicolinealidad en el modelo.

Homoscedasticidad:

```{r}
ncvTest(mod)

```

Test de normalidad:

```{r}
shapiro.test(rstudent(mod))
jarque.bera.test(na.omit(rstudent(mod)))
ks.test(rstudent(mod), 'pnorm')
```

Atípicos:

```{r}
res <- rstudent(mod)
yhat <- fitted(mod)

which(abs(res)>3)

library(ggplot2)
ggplot(mod, aes(x=yhat, y= res))+
  geom_point()+
  geom_hline(yintercept = -3,color="darkblue")+
  geom_hline(yintercept = 3,color="darkblue")
```

En este caso hay una presencia de 4 datos atipocos. Hay uno que es super notorio y la idea es eliminarlo, con los otros tres hay que ver que se va hacer.

Bosques:

```{r}
names(datos_sub)
set.seed(50)
intrain <- sample(x = 1:nrow(datos_sub), size =
nrow(datos_sub)*.7)
training <- datos_sub[intrain,]
testing <- datos_sub[-intrain,]
# ajustamos modelo lineal simple
rf <- randomForest(precio_m2 ~ .,data= training)
names(datos_2)
```

```{r}

pred <- predict(rf, newdata = training)
results <- data.frame(
  Actual = training$precio_m2,
  Predicciones = pred
)

results<-results|>
  filter(Actual < 400 & Actual >1)

ggplot(results, aes(x = Actual, y = Predicciones)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0, color = "red") +
  labs( x = "Variables originales", y = "Variables predichas") +
  theme_minimal()



pred <- predict(rf, newdata = testing)
results <- data.frame(
  Actual = testing$precio_m2,
  Predicciones = pred
)

results<-results|>
  filter(Actual < 400 & Actual >1)

ggplot(results, aes(x = Actual, y = Predicciones)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0, color = "red") +
  labs( x = "Variables originales", y = "Variables predichas") +
  theme_minimal()
```

En este gráfico por más que los puntos esten bastantes dispersos al rededor de la línea roja siguen la linea creciente. Por lo que nos podemos dar cuenta, que las variables predictoras no predicen muy bien a las variables originales.

```{r}

media_años <- round(mean(datos_2$año_de_const[datos_2$año_de_const != 0], na.rm = TRUE))
datos_2$año_de_const[datos_2$año_de_const == 0] <- media_años

# Definir los reemplazos y los valores de reemplazo
reemplazos <- c(3, 10, 15, 90, 39, 95, 60, 966)
valores_reemplazo <- c(2003, 2010, 2015, 1990, 1939, 1995, 1960, 1966)

# Aplicar las reglas de reemplazo
for (i in seq_along(reemplazos)) {
  datos_2$año_de_const[datos_2$año_de_const == reemplazos[i]] <- valores_reemplazo[i]
}

# Convertir año_de_const a tipo numérico
datos_2$año_de_const <- as.numeric(datos_2$año_de_const)

library(rpart)
library(rattle)
# Separo la muestra en entrenamiento y testeo
inTrain <- sample(1:nrow(datos_2), nrow(datos_2)*.7)
train.set <- datos_2[inTrain,]
test.set <- datos_2[-inTrain,]

library(rpart.plot)
tree_ab <- rpart(precio_m2 ~ Municipio + año_de_const,
                 data = train.set,
                 control = rpart.control(minsplit = 5, # número mínimo de observaciones que deben existir en un nodo para ser dividido
                                         cp = 0.001, # parámetro de complejidad
                                         maxdepth = 30)) 
prp(tree_ab, 
    faclen = 0,           # No abreviar los nombres de las variables
    cex = 0.8,            # Tamaño del texto
    extra = 101,          # Mostrar tanto el número de observaciones como la proporción de la clase
    box.palette = "RdBu", # Colores de los nodos
    nn = TRUE) 


fancy <- fancyRpartPlot(tree_ab, cex = 0.5)

pdf(tf <- tempfile(fileext = ".pdf"))
fancyRpartPlot(tree_ab)
dev.off()
cat(tf)

```

En este paso se trato de ver en que condiciones estaba cada municipio. Creo que noquedo muy bien, pero es un intento de arbol

Metadatos :

```{r}
# Creamos variables del tipo character
nombre_variable <- character()
tipo_variable <- character()
descripcion <- character()


# Creamos un dataframe donde vamos a almacenar la información de cada columna basandonos es: Nombre, Tipo de Dato, Descripción
tabla_variables <- data.frame(
  "Nombre de la variable" = nombre_variable,
  "Tipo de variable" = tipo_variable,
  "Descripción" = descripcion,
  stringsAsFactors = FALSE
)



# Creamos la tabla
tabla_variables[1,] <- c("direccion", "Character", "Ubicación donde se encuentra la propiedad")
tabla_variables[2,] <- c("nro_de_piso", "Character", "Número de piso de la propiedad")
tabla_variables[3,] <- c("tipo_prop", "Character", "Tipo de poropiedad, como apartamento, oficina, casa")
tabla_variables[4,] <- c("Condicion", "Character", "Condición en la que esta la vivienda, es una variable que se separa en categorias (Excelente, Buena, Renovada)")
tabla_variables[5,] <- c("disposicion", "Character", "En que posición se encuentra la propiedad separada en categorías (interior, frente, fondo)")
tabla_variables[6,] <- c("m2_terraza", "Numérica", "Metros cuadrado de la terraza")
tabla_variables[7,] <- c("cant_cuartos", "Numérica", "Cantidad de dormitoros de la propiedad")
tabla_variables[8,] <- c("vivienda_social", "Dummy", "Si la propiedad esta destinada para vivienda social, variable de si y no")
tabla_variables[9,] <- c("Closet", "Dummy", "Espacio de guardaropas en la propiedad, variable de si y no")
tabla_variables[10,] <- c("Garage", "Dummy", "Garage en la propiedad, variable de si y no")
tabla_variables[11,] <- c("Playroom", "Dummy", "Sala de juegos en la propiedad, variable de si y no")
tabla_variables[12,] <- c("WiFi", "Dummy", "Conección a wifi en la propiedad, variable de si y no")
tabla_variables[13,] <- c("balcon", "Dummy", "Balcon en la propiedad, variable de si y no")
tabla_variables[14,] <- c("jardin", "Dummy", "Jardin en la propiedad, variable de si y no ")
tabla_variables[15,] <- c("amueblado", "Dummy", "La propiedad viene con los muebles incluidos a la hora de ser alquilado, variable de si y no ")
tabla_variables[16,] <- c("Updated", "Fecha", "Última fecha que fue actualizado el listado")
tabla_variables[17,] <- c("Apartments_per_Floor", "Numérica", "Número de apartamentos por piso en el edificio")
tabla_variables[18,] <- c("zona", "Character", "En que zona de Montevideo se encuentra la propiedad")
tabla_variables[19,] <- c("baños", "Numérica", "Cuántos cuartos hay en la propiedad")
tabla_variables[20,] <- c("m2_totales", "Numérica", "Metros cuadrados de la propiedad, en dolares")
tabla_variables[21,] <- c("cant_de_est", "Numérica", "Cantidad de estacionamientos que tiene disponible la propiedad")
tabla_variables[22,] <- c("Barbecue", "Dummy", "Barbacoa en la propiedad, variable de si y no ")
tabla_variables[23,] <- c("Patio", "Dummy", "Patio en la propiedad, variable de si y no ")
tabla_variables[24,] <- c("Pet", "Dummy", "Si se aceptan perros o no")
tabla_variables[25,] <- c("Duplex", "Numérica", "Si es un duplex o no, duplex es una propiedad que esta encima de otra y generalmente son dos")
tabla_variables[26,] <- c("zona_barbacoa", "Dummy", "Si hay una zona de barbacoa en el edificio de la propiedad, variable de si y no ")
tabla_variables[27,] <- c("deposito", "Dummy", "Área de almacenaiento o depósito en la propiedad, variable de si y no ")
tabla_variables[28,] <- c("losa_radiante", "Dummy", "Losa radiante en la propiedad, variable de si y no ")
tabla_variables[29,] <- c("precio_m2", "Numérica", "El precio de la propiedad por metros cuadrados")
tabla_variables[30,] <- c("Common_Expenses", "Numérica", "Gastos comunes asociados a la propiedad, en dolares")
tabla_variables[31,] <- c("cant_de_piso", "Numérica", "Núemero total de piso en el edificio")
tabla_variables[32,] <- c("condicion", "Character", "En que condición se encuentra el apartamento searado en caregorías(Good condicion, 	Excellent condicion, 	Brand new)")
tabla_variables[33,] <- c("cant_habitaciones", "Numérica", "Cantidad de habitaciones en la propiedad")
tabla_variables[34,] <- c("año_de_const", "Numérica", "En que año fue construida la propiedad")
tabla_variables[35,] <- c("vista_al_mar", "Dummy", "Propiedad con vista al mar o no, variable de si y no")
tabla_variables[36,] <- c("Living_Room", "Dummy", "Propiedad con living o no")
tabla_variables[37,] <- c("Pool", "Numérica", "Pool en la propiedad")
tabla_variables[38,] <- c("coneccion_cas", "Dummy", "Propiedad cuenta con conección a gas directa o no, variable de si y no")
tabla_variables[39,] <- c("calefaccion", "Dummy", "Propiedad con calefacción, variable de si y no")
tabla_variables[40,] <- c("Gym", "Dummy", "Propiedad con gym, variable de si y no")
tabla_variables[41,] <- c("Air_condicioning", "Dummy", "Propiedad con aire acondicionado, variable de si y no")
tabla_variables[42,] <- c("Solarium", "Dummy", "Propiedad con solarium, variable de si y no")


library(gt)
# Resultado
tabla_gt <- gt(tabla_variables) |>
  cols_label(
    Nombre.de.la.variable = md("**Nombre de la variable**"),
    Tipo.de.variable = md("**Tipo de variable**"),
    Descripción = md("**Descripción**")
  ) |>
  tab_style(
    style = cell_text(size = pct(75)),
    locations = cells_column_labels()
  )

```

```{r}
# max(datos_2$precio_m2)
# max(datos_2$Gastos_Comunes)



# Exportar Datos

library(writexl)
write_xlsx(datos_2, path = here("Datos","datos_limpios.xlsx"))



```
